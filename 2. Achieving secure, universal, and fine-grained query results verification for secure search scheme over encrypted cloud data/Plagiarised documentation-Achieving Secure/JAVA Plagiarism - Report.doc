{\rtf1\ansi\deff0{\fonttbl{\f0\fnil\fcharset0 Segoe UI;}{\f1\fnil\fcharset0 Tahoma;}}
{\colortbl ;\red43\green57\blue66;\red255\green255\blue255;\red7\green81\blue160;\red255\green255\blue0;}
\viewkind4\uc1\pard\qc\cf1\highlight2\lang1033\f0\fs24{\pict\wmetafile8\picw3703\pich2857\picwgoal2099\pichgoal1620 
010009000003d05800000000ba5800000000050000000b0200000000050000000c02290b770eba
580000430f2000cc0000006c008c0000000000290b770e00000000280000008c0000006c000000
010018000000000030b10000c40e0000c40e00000000000000000000f6fffff7fefffffffefffd
fcfffefffcfefffafffefafffcfdfefffffdfffffdfffffcfffffefefffefdfffefffffffeffff
fefbfffcfbfffefafffdf8fefdf8fefdf9fdfef9fdfefdfffffdfffffcfefefcfefefafffdfaff
fdf9fffbfafffdfffefffffefffdfefafdfff9fffffbfffffcfafbfff8fbfffdfefffdfefffffe
fffdfffffdfffffdfffefffffcfffffcfffffeffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffdfffffdfefffbfefffafdfffafffffaff
fffafffefbfffffbfffffffdfffffefffffefdfffffcfffffefffcfdfffcfffffbfffffefffffe
fffffefffffefffffefffffefffffefffffefffffefffffefffffefffffefffffefffffefffffe
fffffefffffffffffffffffffffffffffffefffffefffffefffffefffffefffffefffffefffffe
fffffefffffefffffefffbfffff8fffcf6fff9fbfffbfffffcfffdfffffdfffffffefffffeffff
fffbfdfefdfdfdfffefffffbfffffafffffefffdfcfeffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffafdfffafefffdfffefafdfbfefdfffcfefffaff
fefafffdfcfefffffefffffdfffffdfffefdfffffefefffcfdfffcfdfbfefcf8fffcf8fefdf8fe
fdf5fdfdf5fdfdf7fcfff8fdfff7fafef7fafef7fafef7fbfcf7fbfcf6fcfbf7fdfcf7fdfcf9f8
fcfcfbfff8fdfcf6fbf9fbfcf8fcfdfbfbfcfffdfdfffffefffffefffffffffffffefdfffefdff
fefffffcfffffcffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffdfffffbfefffbfefffbfefffbfffffbfffefbfffffbff
fffdfefffffefffdfefcfffffcfffefffffdfffffefffffdfffffefffffefffffefffffefffffe
fffffefffffefffffefffffefffffefffffefffffefffffefffffefffffefffffeffffffffffff
fffffffffffffffffefffffefffffefffffffffffefffffffffffefffffefffffefffffefffffe
fffdfffffbfffcfbfffbfdfffcfffffefffdfffffdfffffefffffffffffefffdfffffcfefefffe
fffffdfffffbfffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffefffdfcf6fbf9edf4f1edf2f0ecf1efeef3f1eef1eff1f1f1f1f0
f2efeef7efeef7ebeef2eaeeefeceeefebedeeeaeff0e7efefe4edf0e4edf0e5eef2e5eef2e6ec
f3e6ebf4e7e9f4e8eaf5e8eaf4e8eaf4e8eaf4e6ecf3e6ecf3e6ecf1e8ecf1ebeef6e5ebf2e0e6
ebe7ecedf2f6f7fafafffefbfffffdfffffefffffffbfffff9fdfffbfbfffcfdfffeffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffefffffefffffefffffefffffefffffffffdfffefbfffefbfffff8fcfdeff4
f3eef3f2f2f3f7f2f3f7f5f4f6f3f2f4f4f3f5f4f3f5f4f3f5f4f3f5f4f3f5f4f3f5f4f3f5f4f3
f5f4f3f5f4f3f5f4f3f5f4f3f5f4f3f5f4f3f5f4f3f5f4f3f5f4f3f5f2f4f5f4f3f5f4f3f5f4f4
f4f4f4f4f4f4f4f4f5f3f4f4f4f4f5f3f6f4f4f6f4f4f6f4f4f6f4f4f6f4f4f6f4f4f7f2f3f7f2
f3f8f1f4f9f2f5f9f2f7f8f2f7f7f2f4f5f1f6f5f3f9fdfefffdfffffcfffdfffefffffdfffffe
fffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffe2e8edd3e3eab6d9e69ecbd99ac6d396c2cf9ac3d29ac0d29ec2d29bc1d394bed590bcd38fbc
d18ebcce8ebbd08fbcd18ebbd089b8cd87b6cc84b4cc84b4cc86b3ce83afcc84adcd81a9cc83a9
cc84a8cc82a8ca80a6c87ca5c57aa3c378a1c17ba2c27aa3c477a0c185a8c2b3c7d2e2ebeff9fc
fffefdfffffefffffffefffffbfffffbfffffcfdfffefdfffffdffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
fffffefffffefffffefffffffffffffefdfffcfafffff5f9ffe6e8ffd5d7f9cdd0f6cfd0f6cfd0
f6d0d2f5cfd0f2d0d0f4d0d0f4d0cff6d0d0f4d0cff6d0d0f4d0cff6d0d0f4d0cff6d0d0f4d0cf
f6d0d0f4d0cff6d0d0f4d0cff6d0cff6d0cff6d0cff6d0cff6d0d0f4d0d0f4d0d1f3d2d1f1d2d1
f1d2d1f1d2d1f1d2d1f1d2d2f0d2d2f0d2d2f0d2d2f0d4d1f1d8d1f4d7d0f3d6d0f3d4d0f3d2d0
f4d3d0f0d4d0edd4d2e6e7e6f0fafcfdfdfffefcfffbfffffefffffffffefdfffdfcffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbae2f484bdd747a6
ce36a8d733aad72ea5d236a9db33a3d734a4d930a6da2daadd2dade030afe231b0e331afe531af
e634afe737b2ec35afeb35afeb36afed2ea4e5269be02ea0e72e9ce82f9cea2f9be92e9ae8309c
ea2d9be72b9ae32e9ce82c97e8319dee2d9be747a1da82adc8d2e1eaeaf1f4fdfffefffffeffff
fefffffefffffffffbfffffdfffffefffefefeffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffe
fffffffcfffffbfafffef4fbffb5b3ee5855ab514db44c49b74e4eb84d4eb64d4fb54d4eb64e4e
b84e4eb84e4eba4e4eb84e4eba4e4eb84e4eba4e4eb84e4eba4e4eb84e4eba4e4eb84e4eba4e4e
b84e4eba4e4eba4d4cba514ebc4e4bb84d4bb5514fb94f4eb6504db45452b64f4eb04645a74443
a54746a64645a54544a44645a54644a44941a54d48ab4044a33c44a24148a940469f44458f8486
b6e4e6f8f8fdfbfdfffbfbfef5fffffbfffffefffcfdfffeffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffcffaffacecff50b9ec25ade819b2f116b3
f514aef515aff814aef910aff90cb2f70ab3f70bb1f60ab0f709aef708acf809abf90dadfb0aac
fb0aacfb0dabfe06a3fa009af30298f60496f90696fc0494fa0494fa0797fd0696fb0496f90597
fb0696ff0291fa0797fc289eef5599c8a9cadedeeaeefdfffcfefffbfefffbfffffffffefffffa
fffffcfffffefffdfdfdffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefffffffffefffffefffffffcfffffcfaff
fff3f7ff9996e63229a12c23b32823bc2322b81d1fb32123b72123b71f20b81f20b81f20b81f20
b81f20b81f20b81f20b81f20b81f20b81f20b81f20b81f20b81f20b81f20b81f20b81f20b82321
bb211fb92422bb2322b8211fb52423b52525b5201ead12119d0c0b970b0b950d0d970c0c940a0d
940c0c940c0c96110b980d0a96060c93020e92060f950c138e1d1e806d6dadebeefffcfffdffff
fbfdfff7fffffbfffffefffcfefffeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffecfdffd7fbff94dbff3fabe11cabef0cacfa09a6f609a7fa07a8
fc05a9fb03abf803acf705acf707abf808aafc08a9fd07a8fc08a9fd07a8fc07a8fc09aaff06a6
fe009bf80092f40092fa0292fc018ffe008efd0391ff0392ff0292fc0092fc0094ff008ff90592
f91c9af33899dd69a7d0cbdfeaf5f4f0fffffbfffffcfffffffefdfffcfcfffdfdfffdfffffdff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffefdfffcfdfffefffefffffefffffffffdfffff8fefff3f5ff9b94ef261c
9e1e16b01915ba1616bc1417bf1115c10e12be1315c11515c11515c11515c11515c11515c11515
c11515c11515c11515c11515c11515c11515c11515c11515c11515c11515c11414c01614c11615
bf1715bb1a19bd1615b80b0aa804039f02019d04049e05059f03039d01039d04049e03039d0400
9f0905a40307a202079f02059609098b1b167f827ac0f9f6fffffefffffffefffffcfdfffefcfe
fefbfdfdffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffff7fcffecfdffd0f9ff85d3fe2dabec12a9f90da8fd08a9ff02a9ff01aaff04aafd06ab
fa06abfa06aafc09aaff09a9ff05a7ff03a8fe06a9ff06a9ff06a8ff07a9ff02a0fe0093f60092
fa0192ff028fff018eff028fff0390ff0290ff008ffe0090fe0192ff0390f90f92f3269df33f96
d4a0c2d9e3e8e9fafdfbfefffbfffefefdfcfefcfdfffbfffffdfffffdffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffdfffefdfffefffffffffefffffefffffefffbfdfff6f6ffb6b0f74e48ad3b38b3201ead1211
b41414c41013c91315cd1111c91112c81112c81112c81112c81112c81112c81112c81112c81112
c81112c81112c81112c81112c81112c81112c81011c71213c91110c41111c31816c61414c00807
b10000a60000a30000a30001a30001a30000a20000a20001a30000a10100a40100a300009b0405
950a0c8836359d6f69bac9c3fafbf8fffefdfffffefdfffffefdfffffafefffdfffffdffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8fcfdf6ff
ffedfdffc7f3ff62c1f921a4ee17abfd09a9ff00a8ff00a8ff05a7ff08a7fe06a7fb06a7fd07a5
ff06a5ff03a8ff01a9fe04a9ff04aafd03a8fe08aaff07a6ff009afb0094f90193fd0492ff0491
ff0390ff0390ff0492ff0391ff028fff0592ff0392fb0591f60b93f92f9aeb6ba0c5c9dce9eaf1
f4fcfafafffefffffefffffffffdfffffefffdfefffdffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffffffff
fefffffffffefffffefffffefffdfcfff8f6ffebecffd6daff7f81d92f28b11912b91a15ca0f0c
c61111c91111c91111c91111c91111c91111c91111c91111c91111c91111c91111c91111c91111
c91111c91111c91111c91112c81314ca1213c71414c41615c30b0bb70000a90000a40000a50102
a60001a50000a40001a50102a60001a50001a30407a603049c0b0b952324948084cbd6dbfff4f6
fff5f5fffdfcfffcfefffffffcfdfffcfcfdfffdfdfffffefffefefeffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffdfffffbfdfdfcfeffe5fcffa9ea
ff52b8f31da7f00ba9fd01a8ff00a8ff06a8ff08a8ff07aaff07aaff07a9ff07a9ff01a8ff00a7
fe02aaff02aafd02a7fd05aaff09a8ff04a1ff0095f80092fa0290ff0492ff028fff0391ff0493
ff0592ff0690ff048eff0391fc0393fc0393fd209af44997cc95bdd9dae6f0faf8f8fffdfffffe
fffffefdfffffefefffdfffffeffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffefffffefffffffefffffeffffffffff
fffffffffffffefbfcfaf8fbfff1f8ffe8ecff817bf2221abb100cbf1514ce1010c81011c71010
c81011c71010c81011c71010c81011c71010c81011c71010c81011c71010c81011c71010c81011
c71112c60f10c41315c71515c50a0ab60000a90000a60000a40000a40001a50000a40000a30000
a40001a50000a30102a00306970c0e8b4342aabcbbfff3f5fff7fafff0f3f8fdfffffcfefffdff
fffffffbfffffcfefdfffffdfffffefffdfdfdffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffefffbfdfefafbfcfaf4ffffddfbffa1e5ff3ab2ee13aa
f508a9ff02a8ff04a9ff04a9ff01a9fe00a9fe00a9fe00a8fd00a7fe00a7fe01aaff02aaff03a9
fc03a8fe08a8ff08a5ff0098fa0091f70190fd0491ff0390ff028ffd0492fd0391fc0691ff028c
fc028ffd0494fe0697fd0f97f1339fe6589fcbc0d5e4f3eeeffffdfffffdfffffdfcfefffbfdff
fefbfffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffdfffffdfffffbfffefdfffeffffffffffffffff
fffcfefff4faffebf1ff706ddb211db81212c20e12c91011c71211c51210c71211c51210c71211
c51210c71211c51210c71211c51210c71211c51210c71211c51210c71211c51214c61114c31415
c30c0eba0101ab0000a60101a70001a50201a50302a50201a40100a30302a60201a50000a50506
9e0f0f8b6061b9dbdcfff6f6fff7f3fffffcfffffdfffdfcfefcfffdfffffcfffffbfffffcfffe
fffffefffdfffffcfefeffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffdfff9fefffafffffcf8fafbf4feffd4fcff7bd5fe2cace715a9f707a8fe03a8
fe01a9fe00a9fe00aafc00aafc00a9fe00a8ff00a7fe01a9fe02aaff06aafd04a7fd05a7ff09a8
ff059ffe0095f90091fb0493ff0391ff0390fe0391fc0490fb0792ff028ffd0592ff0494fe008e
f40795f41f9df53995d697b9d6dbdee6f9f8fcfffefefffffcfffffcfafffdfafffdfdffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffdfffffdfffffdfffefdfffefdfffffffefffffefefbfbfbf8feffd8dd
ff4544b81e1cbc1518c70d11c71213c91413c71413c71413c71413c71413c71413c71413c71413
c71413c71413c71413c71413c71413c71412c91413c71212c41718c60d0fbb0001a90000a40001
a50000a40001a50000a30201a50100a40200a30400a50400a00404980f0f8b6869c1dddefff7fa
fffffffffffefffffcfffffcfffaf9fbfffffefffffcfffffbfffefafffefffffefffcfefefdff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8ff
f6fdfffbfdfbfbfffdfff9fcffe9feffc3f7ff76cff12aabea0da5f608a8fc01a6fc00aafc02ad
fd00a5fa05aaff02a9ff02aaff04a9ff06aafd09a9fd08a9ff04a8ff04a8ff09a9ff009bf80093
fb0092ff0090ff028fff0792ff0790fe0592ff0291fe0091fe0294fe0094fc0191fa0c93fb319b
f06195c4bed3e8e0ebeffdfffcfbfffafcfffdf7fcfafbfffefdfffefffffefdfffefdfffeffff
fffffffffffffefffffefffffefffffefdfffefdfffefdfffffffffffffefffffefffbfdfdfcff
fdfffffefffdfcfffdfffffdfffcfbfffefdfffdfefafbfffff2f8ff9fa4e32724af1a17c71211
c51011c71311c81512c61512c61512c51313c51312c61112c61112c81314ca1011c51012c41113
c51212c41312c61311c9110fc71816cd0f0cbf0404b00000a400009e00019e0002a10103a70001
a50000a40a07b00300a50800a50c03991515876f73c1f3f2fffafafffdfdffffffffffffffffff
fffffefffffffffffffffffffefffffefffffeffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffafef8fcfffbfcfbfdfffe
fffcfbfdf2fbfee8ffffb9f3ff59c1f024abef0fa7f809acff01a9fc02aafd07acff01a6fd04a9
ff04a9ff04aafd06aafd06a9ff06a8ff04a8ff04a8ff09aaff03a1fb0096f90092fb0092ff0292
ff0590fe0590fe0592ff0291fe0093ff0094fe0193fd0190fd0690ff2095f64b9ad985b3d5ccdf
e6eff5f0fdfffef7f9f9fbfffef8fdfbfffffefffffefdfffefdfffffdfffffffffffffeffffff
fefffffefffffefdfffefbfffefdfffffffffffffefffffefffdfffffafffdfefdf9fffdfcfffc
fffffcfffffdfffffefffffffcf6f8ffdfe3ff5054b31d1db71210c71514c81613c71511c81511
c81512c61512c51313c51313c51112c61112c81112c81213c71112c61113c51313c51110c41210
c71715cc110ec20806b60000a90000a30002a000039e0002a10000a40002a60000a50000a40801
a510079e170f8b7476c4ecf0fffafbffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefffffffdfcfefdfffff9fefcf4fcfcf3fc
ffddfbffa6ecff4bb7e71facf509aaff06a7fd05a8fe06abff02a7fe06a9ff04a9ff01abfd00ab
fd00aaff01a9ff04a8ff08a7ff09aaff08a7ff029af90091f70094fe0293ff0190fd0391fc0492
fd0392ff0093ff0192ff0692fd0791fc0790fe1193f630a2ef4294c3b2d0dbe5e9e4fffcfefefd
fffcfefefcfefefffffffffefffffffffdfffffdfffffffffffffffffffffffffffffffffffbff
fefafffefbfffffdfffffffffffffffffafffbfbfffcfefcfbfffbfcfefcfcfafafafffdfffffd
fdfcfbf7f6f7ff8e8ee82123ad1417bf0e12c51212c41613c61512c61511c81312c61312c61313
c51313c51113c51112c61011c71112c81513ca1412c91110c41313c51714c71615c30306ae0002
a70000a60000a40002a40002a40000a20000a30000a40000a40200a30b079c1111876b6fbee6eb
fff6fcfffdfeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffcfdfffdfdfbfdfef9fefdfdfffefdfffff8faffebf9ffd8ffff9ae3
ff38b0eb18aaf60aa5fa04a6fe04a9ff02a7fe04a9ff04aafd01abfd00abfd00aaff00a9ff06a8
ff08a8ff06a8ff09a9ff08a1fc0196f60093fb0192ff0292fc0292fc0391fc0392ff0093ff0091
fe0591fc0892fd0591fc0692f7119cf3319bda7badc4d5e4e7eff2f6fffcfefffefffdfcfefffe
fffffefffffefffdfffffdfffffdfffffffffffffffffffffffffffffbfffffbfffefbfffffdff
fffffffffffffef9fdf8fdfffcfffefefffdfdfffffffefefefffefdfffdfffbfbffcacaff3b39
b51a1bbf1216c81013c91111c31513c31512c61511c81312c61312c61312c61313c51113c51112
c61314ca0f0fc71412ca1513cb110fc61717c91817c50809b10000a20001a00100a40302a60201
a50000a30000a30201a50002a60003a20907a00e0d8b5d61b4e2e7fff6fbfff8fafaffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffbfcfffefefbfffff8fcfdfffdfcfffefdfafcfdf8feffeefafed8ffff81d6fc31ace614a9
f904a8ff03a8ff04a9ff02aaff02aafd04aafd04aafd02a9ff02a9ff06a8ff06a8ff05a7ff07a9
ff06a9ff02a0fa0092fa028ffd0593fe0492fd0390fe0392ff0192ff0091fe0391fc0492fd0392
ff0093fb0092f425a3f14a95c3a3cbded8e7eafefcfcfffbfffffcfffffdfffffefffffefffdff
fffdfffffdfffffffefffffefffffefffffffffdfffffbfffffbfffefbfffefdfffefffffefeff
fbfefffbfffffefcfcfcfffefffffdfdfffdf8fefaffe9e6ff6665c32121b30c0fbe1114cd0e10
c91412c91313c51312c61312c61311c81312c61112c61112c61113c51112c61513ca1210c8120e
cb1512cc1713ca1614c40d0db50001a300009e00029d0003a10104a30401a40200a30000a40001
a50000a004059d090b8f5152b4e2e6fff8f9fff4f4fafffffeffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefef9fe
fff9fdfefffdfefffcfbfcfdfbfdfffefcfcfceafdffc9feff6ec9f027aaed0da7fa06a7fd06ab
ff02aaff02aafd04aafd06aafd04a9ff04a9ff06a8ff06a8ff04a6ff03a8ff07adff04a6fe0194
fa028ffd0592ff0491ff0390fe0392ff0091fe0091fe0292fc0392ff0192ff0093ff0092fb1097
f3399dde62a3c9c3dee8f0f2f2fffafffffcfffffefffffffffdfffffbfffffbfffffdfffffffe
fffffefffffefffffefffffffffffffffdfffffdfffefdfffefdfffefffffcfffefafffffffafc
fdfcfbfffbfafefffefff3f1ff8d8adf2928a8191abe0d10c60f11ca0e10c91111c91513ca1312
c61312c61311c81311c81112c61112c61112c61112c61311c81513cb120fc91411cb1815c90b0b
b70000a40002a10402a20102a000039e00039e0201a40100a50000a40001a00606a00d0f934043
a5d0d3fff4f6fffdfcfffffeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffff9fefcf7fcfaf6fbfcfcfdfffffeffffff
fefffffafcfffafafffef3ffffe5fbffc4f7ff5cc0f025acf00fa9fa07aaff08a9ff08a9ff02aa
fd02aafd04aafd06aafd04a9ff04a9ff04a6fe03a8ff06abff06a8ff089bff0491ff0290ff0391
ff0391ff0291fe0091fe0193fd0291fe0291fe0191ff0092ff0092fe0692f6209df23b95d09ec5
dbd7dee1fcfdfffdfcfefdfffffbfffefbfffffbfffffbfffffdfffffffefffffefffffdfffffd
fffffefffffefffffffffffffffdfffefdfffefffefafffcfbfffefffdfefffefafffdfcfff4f7
ffafb1eb3433ab1d1cba1110be1819cd1011c70f12c81010c81212ca1112c61112c61112c81112
c81112c81112c81311c81311c81210c71513ca1712cb1511c80f0cbc0201ab0000a00103a50501
a70300a500019f0002a00000a40001a60001a302039b0a0c962d2e96c9cbfff8f9fffaf9fffdfa
fcfffdfffffcfefffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffff9fffbfafffefafefffdfefffffdfffffdfefffffbf9fdf7f7fd
fcfafffff8fffce6ffffaeeeff53b8ec1faaef0caafd09a8ff08a8ff04aafd02abfc02aafd04aa
fd04aafd04aafd02a7fd04a9ff04a8ff06a6ff0ba1ff0497ff008efd0191ff0391ff0290ff0093
ff0093ff0392ff0390fe0290ff0391ff0191ff008df80c96fa309eea639cc3c2d9e8e4edf1fcfe
fefbfffefbfffefbfffefbfffefbfffefdfffffffffffffefffffdfffffdfffffdfffffefffffe
fffffffffdfffefffffefffefafffdfcfdfcfefdfdfff8f8fef4f4ffcbceff4346a81f1fb31514
c21613c7100fc31214c61012c41313cb0f0fc71112c61113c51112c61112c81112c81112c81311
c81311c81412c91211c51a17cb1412c20200ad0000a60304a80000a30100a70400a60402a20003
a20001a40000a30002a0070993232591babafff7f7fffdfdfdfffffbfffffefefbfdfffdfffffe
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffafffcfbfffefdfffffffefffffefffffffffdfffcfdfffcfdfffff9fefdf6fffceefd
ffe6feffaae3ff43b4ec11a6f007a6fd03a7ff04a8fb06acff01aaff01aaff03aafb05acfd01aa
fb03abff04a4ff07a3ff0fa9ff069fff0091fa0090fe0492ff0290ff0090ff0092ff0392ff0391
fc0590fe0690ff028dff0591ff018ffa1c98f04298d486b9d9cee1e8f5f9f4f8fbf9fdfffefafe
f9fcfffbfdfffcf9fdf8fdfefcfefcfcfefbfdfffefffffefffffbfdfffdfefffffffdfefcfeff
fdfffdfcfffdfcfffefdfdfcfef8fbffdce0ff5053bc2525b71617bb1513c31611c81511c81114
c31115c21312c61311c80f10c41315c71214c61011c51112c81111c91210c81311c91410c71916
c91311bf0504ae0000a50000a40201a50201a50201a50000a20201a40204a60000a10308a50002
9715198fa3a3e3f2f0fffdfcfffefcfbfffff9fffff7fffefefefdffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfffefdff
fefffffffffefffffffffffffffdfffcfdfffcfdfdfdfefdfffafffff9fefff8fdfedbfbff86db
ff33aeec14aaf803a6fc0cadff01a7fa04adff02acfe02a9fa06aafc02acfa01a9fe03a6ff06a5
ff07a8ff06a5ff0099fe0090fa0391fc0491ff0190ff0090ff0091fe0492fd0892fd0790fe0990
ff038eff018ffe1398f92f9cea4d9acbafd2e0dfe8e5fdfffefcfaf9fffffefffffcfcfef8ffff
fbfbfffafbfefcfffffffcfbfdfffcfefffefffffffffffffffffffffffffefffffefffbfaffff
fcf7f7ffe6eaff686bc02425b51313bf1513c31512c61611c81512c61314c21115c21512c61312
c61413c71214c61113c51112c61213c91111c9120fc91311c91815c91312c00909b10001a50000
a20002a40200a60100a50201a40101a10000a10003a20205a40407980b108b7c7fd4ebecfffdfd
fffcf9fbfffefafffff9fffff9fffffffdfcfeffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffefffffffffdfffffdffffffff
fefffffefffffefffffefdfcfefffefffffcfffffefff7fdf8eaffffc9faff7dd0fd26a8e913ae
fd05a6fa03abff00a8fb02abfc06aafd09aafe05acfd00a7fa01a9ff02a9ff00a7ff04a8ff05a4
ff0095f70292f80691ff0491ff008fff0091fe0494fe0693fc068ffd0990ff068fff058fff0992
f91299f52e97da7db2cdcde0e5eceff3fffdfefffefdfffcf9fffffbfffffbfdfffbfafffbfaff
fff9fefdfcfefffdfffffbfafcfdfbfbfffefefffefefffffefffffef3f8f7f3f6ff7a7ad82828
b21414ba1312c61510c91510c91311c81313c51514c21514c21512c61312c61514c81012c41012
c41213c71311c81210c71611ca1713ca1513c30909b30001a50001a00001a00001a30200a60100
a70201a500009f0005a20408a300009b100e906263b4e9eafff8f9fffafbfffffefefffffefafd
fbfdfffefdfcfefffdffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffefffffefffdfffffbfffffffffefffffcfffffeffff
fffffdfffffdfffcf8fefefdfff9fffaeefdf9eafeffc4f4ff69c8fa23a6e90fabf802aafd00a9
f708acfe08a8fc09a8ff07abfe00a8fb01aaff00aaff00a7fd02aaff07aaff029ef80193f60391
fc028fff028fff0391ff0492fd0492fd0391fc0390ff0690ff078fff018df80292f826a1f1529d
c9a4c9dfd7e1ebfffbfffffbfdfffcfbfffffcfffff9fcfffafafffcf6fffcf8fffffbfffffbff
fffefdfffefdfffffffffffffffefefefafcfff1f4ff9195dc2928ae1916bf1715c51311c81310
ca1310ca1112c81112c61613c31613c31512c61312c61213c71012c41214c61112c61110c41413
c71814cb1613c60909b50002a70000a20003a10002a00000a20100a50200a80200a60000a20004
a1000095121197413da2e2dffffbf9fff8f9fffcfdfffdfffffafdfbfcfffdfdfffffcfbfdfffd
fffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffefefffefffdfffffbfffffdfffcfffffbfffffcfffffefffcfffffdfffcfb
fdfafcfcfbfffff9fffef9fcffe9fcffc2f3ff5fbbea1babec03adf503abf809acfb0ca9ff08a4
fd08a9ff04a9ff01abfd00a9fe00a9ff01a9ff04abfc07a7fb0297f70191fa008efe028fff0690
ff0790fe0390fe0193fd0091fb0091fe0791ff078fff0591fc1496f1379dde5fa3cec0dbf0e9eb
f5fdfdfffffefffffdfcfffffbfcfdf9fbfffcf7fefbf8fffff8fcfdfafefffffefffffefffdfd
fdfbfdfdf6fbfef3f5ffa0a1f92929ab1d1cc0120fc21612c51712c71311c91111c90f11c91112
c81611c61612c51512c61112c61112c61112c61413c71211c51312c61717c91614c40b0bb70101
a90000a20002a10104a20002a10000a20000a60000a70300a90301a70103a50a0c96312f8fc9c4
fffaf5fffef8fffffdfffdfffff9fffef8fef9fffffcfffffbfbfafcfffefffffeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe
fefffefffdfffffbfffffbfffefdfffcfffffcfffffefffdfffcfbfdfdfffefbfefcf7fcfbfdff
fffffefdf8fbffe7fcffb5eeff45b8ea15aaec0aabf707a9fb0aaafe07a6fd08a8ff05aaff00a9
fe00a8fd03aaff01a9fe04a8fa0aabff039efb0095f9008ffd028fff0890ff0790fe0390fe0293
ff0091fb0294fe0592ff0690ff0792ff088ef31f9af03a97d490b9d9d2e0ecf3fafffbfefffffc
fefffdfcfffefdfbfffafafffdfbfffff8fcfdfcfefffffefffafafafdfefcfbfdfff6f7ffa9aa
ee3635b51a1ac01012c41415cb1713c61913c61311c81111c90f11c91112c81512c61611c61312
c61112c61213c91213c91311c81312c61515c71616c60e0eba0000a80000a40000a20002a10003
a20001a30001a50001a50000a40000a70201a4060597211e91a4a3e1f8f6fffefafffffdfffefb
fdfbfdfefafffdfbfffcfffffbfdfcf8fffefffdfcfffffeffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffefffffffdff
fffafffffbfffffffffffffffefdfffef7fcfafffffbfefffbf6fbf9fafcfcfffdfcfffefdf3fb
fadfffff9ee5ff46b2ec1aacf804a9ff00a7f805acfd04a9ff03aaff00a8ff00a8ff06a9ff07a8
fe06a7fd07aaff07a5ff009cfd0092fe008fff058fff0891ff0491ff0493ff0390fe0593fe0393
fd0292fc0190fd0492fd0691f82d9eee609bc2b5cfdfd9ebf6f1f8fffffefffffcfdfffffefffc
fbfffffffffffffefdfffffefffffefefffefefffffef5f3ffbdb7fe3e39ac1d1db71215c40c10
c31213c71814c7120dc21510c91311c91112c81112c61112c61113c51112c61112c61213c91111
c91311c91413c71613c60e0eba0304ac0000a20003a20003a20001a30000a30001a50001a50000
a40000a40000a2070b9f151587807cc8f4f3fff8fbfffdfffefcfdf9fffefffffefffefffdfbfc
f8fafdfbfcfefefffefffdf9fefffeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefffffefffffffdfffffbfffffbffffffff
fffffffff8fdfbf8fef9fcfef8fffffbfdfffefcfefefefcfbfffefafffffaeffcfed8fdff94dc
ff31abed10a8f608acf900aaf804a9ff02a9ff00a9ff00aaff05a8fe09a9fd08a8ff06a6fe09a8
ff03a2fe0097fb0091fa0390fe0791ff0493ff0392ff0994ff038efc0493ff0293ff008efb0090
fd0090ff1896f4479dd37fb3d1bed8e9eaf5fdfafdfffffffffffefdfffdfefffefffffdfffffd
fffffffffcfcfcfdfdfff7f6ffcdc8ff4740af2822b71616c00c10c31216c91213c7110ec21916
ca1311c91311c91311c81112c61112c60f13c61112c61112c81213c91311c81311c81815c81211
bf0202ac0000a10205a40001a00104a30201a40100a40000a60000a40000a20005a201039d0f10
90605eb0eae9fffafcfffcfffbfefffafdfefafffdfdfefcfcfffffefefffdfdfffffbfdfdfefd
fffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffdfffffdfffffffffffffffffdfffffdff
fefffffefffffefffffffffffffffffffffffefcfdf9fbfffff2feffd4fbff7fd4ff2faae813aa
f403aafb03a8ff02a9ff00a7fd00aaff03abfe05a9fc0baaff09a7ff08a8ff07a9ff00a1f90098
f60392ff028fff0090fe0094ff0491ff0691ff0390ff0191ff0192ff0192ff0190ff0b92fa259c
eb3e94c8a8cbe5d4dde6f8fefdf8fcf7fffdfcfffefffffbfffffcfffffefefdfdfdf9fffef2f8
ffd2d0ff504cb3211eb01716c01313c51112c81011c71011c51312c61312c61112c81011c71112
c61314c81213c71112c81112c81112c81312c61212c41a17c71513c00202aa0000a30203a70001
a000009e0306a50300a40300a50000a60102a60004a3000499170f984239a1dbdafff5fafff5f9
fafffffcfffefffffcfefffffffffffefffffffdfffffdfffffdffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffdfffefbfdfdfcfcfceefdffc5f6ff7bd2fe2eacec11a9f70aabff00a6
fd00a9fe04aeff00a9fb00a7fa09a9ff07a6ff05a7ff05aaff03a9fc009df70091fb018eff0191
ff0090ff0492fd0692fd0490ff0390ff0392ff0392ff0390ff0690ff0992f435a2ec659bc4c8de
f0d9e5e5fdfffcfffffefefbfdfffcfffffefffbf9f8fbfffff3fbffdce2ff5653ba2521b01717
bf1213c91112c81112c81112c81112c81112c61112c60f10c41314c81213c71011c51011c71112
c81011c71213c91313c51918c6110fbd0403ad0301a70100a30000a10003a20306a500009b0602
a70602a80400a60100a30105a00a0c962b2290c3bbfff6f8fff6fcfbfdfffefffffefcf6fbfffc
fffffffefffffcfdfffffdfffffdffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdff
fff9fffef3f9f8fdfcfef9fdffecffffc6f5ff6dc7f62aa7eb12abfa00a8fd04aafd04aafd00a9
fb01aaff04a9ff05a7ff04a8ff04a8ff04acff03a5fe0094fc008efd0591ff048efe0693fc0693
fa0492fd0392ff0391ff0491ff0490ff0690ff0b92fe2296f44296d882b6dbccdce8f6f7f5fbff
fff9fbfcfffbfffefcfcfdfff9f6fcffebeeff6c6dc72526b41717c11313c51112c81112c81112
c81112c61112c61112c81112c80f10c61314ca1112c81011c71314c81213c71211c51212c41817
c51616c20505b10000a30200a60502a50000a10104a30104a30103a50000a20102a60d07ac0300
9d08069c14138b9e9fe3f3f7fff4fcfcf9fff7fffffefdfafcfffdfffffefffffffcfffffbfdff
fefdfffffffffefffffefffffefffffeffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfffff7fdfcf7fdfcfdff
fffdfffff8fbf9eaffffb8f0ff65c2f322a9ed0daafa0babff04a8fb02aaff04aeff02a8fb04a9
ff04a8ff02a6ff03abff06abff059eff0091fe028eff0690ff0693fc0494f90394fa0393fd0491
ff0490ff0490ff0491ff0690ff1090f7319ef44793ceb1d0e7dbe2e5f7fdfcf9fefdfffdfffdfc
fff6fbfaf2f6ff8788d92828aa1416bb1113cb1111c91112c81112c81213c91213c71213c71112
c81112c81213c91112c81112c81213c91213c71112c61414c61414c41316bf0808b20000aa0000
a80201a50202a20002a40001a300009f0204a60003a50000a20702a509029917108f7a78d1eff6
fff1fbfbf6fff5f9fff6fdfefcfffcfefffefffffdfdfffffcfffffbfdfffefdfffeffffffffff
fefffffefffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffcfcfcfdfffff6fcfbf9fffdfafdfbf3fe
fce6ffffb4eeff55bbef25abf30fa6fb07a9ff09acff07abfe02a6f907aaff05a7ff05a7ff03a9
fc06abff09a7ff029aff008efd028fff0193fd0194fa0394fa0393fc0491ff0390ff0091ff0093
ff0090fa0c95fc1393f93497e771a5cac5d8e5e2ebeefefefefcf8fdfffbfff9f5ffafaeec3435
b51618bd1416c80b0dc51010c81112c81112c81213c71213c71213c71213c91112c81313cb1010
c81513cb1412c90f0ec21212c41818c81416c2070ab30000a60000a80300a90000a20001a00200
a60000a30002a600009e0408a70202a20600a4150e995d58adeaecfff2fbfff6fff7fbfff9fcff
fafafbf9fffffffffffefdfbfafffffcfdfffcfdfffffdfffffffeffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffefefefefef6fbf9f7fefbfcfffbf7fdf8f5fefbdffeffa1e5
ff51b8f119a3f00ba8ff0aa9ff06a7fd07a8fe08abff02a7fe06abff03a9fc02a8fb08aaff06a3
ff0195ff008ffe0093ff0093fd0393fc0393fd0491ff0390ff0091ff0093ff0295fd0291fa0692
fd2499f44893cb94bfdad2e2e9f3f5f5f9f7fdfaf7ffccc7ff4541aa1d1cba0b0ec41213c91314
ca1010c81112c81112c81213c71213c71213c71112c81112c81212ca1010c81412ca1311c81211
c51717c71517c30609b10000a50000a50000a70100a70000a40001a50000a60000a50104a60003
a20002a103019b0e099a3e39a6d5d5fff9fbfffafffef7fff8f9fdf8fefffdfefcfbfffdfcffff
fcfefffbfdfffefdfffffdfffffdfffffffefffffefffffeffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffefffdfdfdfcfffdfafffdf8fffcf8fffefafffef0fcffdffdff9adcff3fb7f312a8
f607a6fe07a6ff0aa9ff09aafe00aafc00adfd00abfb00a9fa05abfe0aa9ff0a9dff0392ff0191
ff0090ff0391ff0491ff0491ff0491ff0390ff0391ff0595ff0393fc0392fb1092f1339ee8539a
ccb9d3e4e2e5e9fafcffdfdfff5854c52622bd100ebb1615c91010c21514c81112c81112c81112
c81213c71214c61112c61112c81112c81311c9120fc91210c81311c81916c91615c30a0ab40000
a300009f0105a40102a60000a60000ab0000ab0000a50003a20003a00002a00401a40e0b9c2423
8ab8b9f5f8f9fffbfdfdfbfdfefcfdfffcfcfffcfbfdfffffefffff9fcfdf9fffffefdfffffdfe
fffdfffffdfffffffefffffefffffeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcfbfdfdfc
fefcfdfbfcfffdf9fffdf8fefdfdfffffbfeffeff9ffd8fdff80d6ff32adeb15a8f80aa9ff08a7
fe04a8fb00adfd00a9f900a9fa04abfc02abfc08abff0ea3ff0797ff0191ff018fff048fff0490
ff0491ff0491ff0690ff0690ff0390fe0393fc008ff80892f61597f2379ade7aa9c9cddef3e4ed
ff7477c22727b7100dc11817cb1211c51613c61110c41311c81112c81112c81112c61113c51113
c51112c61112c81311c91412ca1210c81312c61715c50a0ab60000a60103a50003a100029d0000
a20001a60000aa0000a80000a20001a00002a005059f08069b1311899496d7f3f6fffbfefffdfe
fafbfafefffdfffcf9fffffefffcfbf7fffffbfffffcfefefefdfefffdfefffdfffffdfffffffe
fffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffefffdfefffdfffffffffefffffcffff
fefffefffffefffbfefff5fbffeafcffd3fcff8cdaff2dabeb0ba7f40dafff05aaff04a9ff06aa
fd04a8fb06adfe03adfb01a8f90ba7ff0ea3ff0394ff0190ff038eff028eff0392ff0393fd0890
ff078eff0590fe008ff90696ff008df30996fd2198ee4696cb9cc9fc7080cd2b2c9e1f1ebc1311
c81212ca1111c91210c71513ca110fc71311c81311c81312c61313c51313c51413c71311c81412
c9100ec51815c91a17ca0c0ab80000a80000a50002a40605a300009e0003a20005a70000a40301
a70000a40001a30001a307079b1211896d6ebff3f3fff9fafffcfdfffffffffffffffffffffffe
fffffffefffffbfffffbfffffffffefffdfefffdfffffffffefffffcfffffffffeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffefffdfefffffefffffffefffffcfffffefffffffffefffdfd
fffafdfff6fcfff3feffd1fbff75d3fe29aee811abf405a6fa08a8ff08a8ff06a7fb02a6f803ad
fb05aeff07a8fc09a7ff079fff0093ff028ffe0592ff0193fd0091fb058fff0890ff0993ff0491
ff0292fc0696ff008ffc0e93f52d9ae4307cc806248d171ca11617bb100ec51010c81214cd0f11
c91213c91311c81311c81312c61312c61212c41313c51312c61312c61211c51616c81714c70e0d
bb0403ad0000a70000a50100a40401a40303a30205a400009c0002a40000a20000a20504a70602
a1120e954b4ba5e5e6fff4f3fffefefefffefffcfbfdfffffefffffefffffefffffcfffffbffff
fcfffefffffdfffdfefffdfffffffffbfffffbfffffffffefffffffffffffeffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffefffffefffffffffffffefffffcfffffcfdfffffdfffffcfbfdfffefff8f9
fdeafcffcbfbff7ad1f324a8e412adfc0ba7ff07a6ff07aaff04aafd03aafb01aafb01aafb04ac
ff05a9ff019ffd0194fa0292fc0093fd0092fc0190fd0592ff008dfc0390ff028dfb0992ff0992
ff0790f71098f8248ef3002397000d961618ba1410c3140fc81312cc0e12c80e13c61112c61312
c61312c61312c61312c61211c51212c41313c51614c41918c6100ebc0201ab0000a60100a50100
a40100a50000a60301a70300a30303a30002a40000a40806ac02009d110a9b2c2697cbc6fff5f5
fffcfdfffffffcfefdfffffefffffffefffffcfffffefffffefffffcfffffefffefffffefffffe
fffffffefffffbfffffcfffefffffefffffffefffffcfffffeffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffcfdfffcfffffefffffffffefefdfbfbfffdfcf8fdfcedffffc1f4
ff67c7f527a9ea12a7f709aaff02a8fb02aafd07abfe04a8fb01aafb00aafa00a9fb06abff059d
fc0091f50093fb0094fe0190fd0592ff0693ff0592ff0b93ff098ffe078efa0490fb0191fb1895
ff2070e3001091000aa41c16c31911c9110ec81116c90c15c31012c41211c51312c61413c71413
c71211c51212c41313c31817c50f0fbb0403ad0000a50000a40201a50100a40100a50201ab0000
a50702a50702a30001a30102a60200a30e089d1f178ca7a1f0f5f2fff9f9fff8fbf9f5f9f4ffff
fffefefefffffefffffefffffffffffffffffefffffffffefffffefffffffffffffcfffffcffff
fcfffefffffefffffffefffffcfffffeffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfffffdff
fefffffefffffefffffefffffefefefefcfdfbfffffbfdfffcf2f9fce6fdffbff3ff6bc3f123ab
e60aaef602adfb00a8fa08a7fe0ba8ff04a5f901aafb00aafa05adff07a6fe0398f80091f70193
fd0492fd0590fe048eff038dfe058dfd0891ff088ffb0791fb0b95ff0a8ff7289dff0049ba0006
921510b31b14c9110ec81217c60e14c11013c21211c51312c61412c91311c81312c61613c61716
c41212be0304ac0000a30001a50201a50100a40400a50000a40000a80000a50503a30400a00501
a70602a80400a0140e91847fcaf8f4fffbfafffefffdfdfffffafcfcfcfdf9fefffbfffefffffe
fffffefffffefffffffffffffffffefffffefffffffffffffefffffefffffffffefffffefffdff
fefdfffcfffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffdfffffbfffffbffffffffffffffffffff
fffffffefafcfcfcfffdfdfff9fbfcf8fafcfdf4fdffe5fcffbbf2ff5cc5f11baae40aaef703ad
ff06a3fa0da7ff06a7fd05abfe03adff00a8f90aaafe0ca5ff0094f80091fb0694ff038efc0792
ff0792ff028dfb0691ff0993fe028cf6058ffa0c95fc0e97f9208df6002dad0000941212be1813
c81112c01115c21313c31313c51312c61210c71311c81413c71613c61514c20607af0000a20000
a20104a30000a20000a20501a60000a40000a30304a800009f0503a30500a407039f0f0b935754
b7e9e8fffdfcfffefffdf8f9f5fffffffffffffbfffafdfffcfffefffffefffffefffffeffffff
fffffffffffefffffefffffffffffffefffffffffffffffefffdfffffdfffffdfffeffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffdfffffdfffffdfffffdfffffffefffffdfffffdfffffefffdfffff7fa
f8fffffefdfffffafdfffafefff1fafee3fbffb7edff5ebbec1ca8ef09aafe07a8fe09abff07ac
ff00a5fc04abff01a6fc08a9fd0daaff049dff0193fd0491ff0290fb0494fa0091f70294fe0392
ff028ef90692fd0592ff008dfb018df81f9bff146bdf0016980008a51c15be1611c01715c51313
c31313c51312c61210c71412ca1412c9100dc00909b50000a50000a20101a10203a100009f0100
a30501a60300a40201a40003a20004a30002a102019f0e0c94403f9bcfd2fff6fafff5faf9ffff
fefefcfbfffdfcf7f8f6fdfffffafffefdfffffdfffefdfffefdfffefffffefffffffffefffffe
fffffefffffffffffffefffffefffffefdfffefdfffffdffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffdfffffdfffffdfffffffffffffefffffdfffffcfffffdfffcfefefdfffefdfdfdfcfefff7fa
fef8fcfdfffffef6fdffe4fbffade5ff49b4ed1aa8ef10aafb02a5fb06abff01a8ff02a7fe06ab
ff07a9fb06a7fd0aa7ff029aff008ff90494fd0092f60296fa0294fe0293ff0391fc0490fb0693
ff0592ff0593ff088ffb2399ff0356ca0005901012ad1916c01512c21212c41113c51112c81412
c91614cb1512c50b09b70000a70000a40002a40101a101009f0201a40201a50100a40201a50201
a40000a10002a400049f060896252492b0b1e9f6fafffafffff8fff8fcfdfbfffffffbf9f9fffe
fef9fbfbfbfffffdfffefdfffcfdfffefdfffefffffefffffffffffffffefffffeffffffffffff
fefffffcfffffefdfffefdfffffdffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffefffffefffffefffffffffffffffffffffffffffdfffffdfffffffffffbff
fff6ffffdcfcffa2e8ff52bbec1ba5ed0aa8fc07a9ff05a9ff06a9ff07abfe06aafd00a4fa07a9
ff08a6ff0096f90091f60093f90194fc0090fd0291fe0795ff0692fd058ffa0792ff0596ff008e
f80b97fc2694fe002aa70009961214b61713c01414c60f12c80f12c81516ca1412c20806b30302
a60000a20503a90000a40200a30701a60400a60000a40200a60000a50404aa0000a50000a1090e
9f1013868d8dd9f6f7fffdfdfdfffffbfffff9fdfffcfdfffffffefffffefffffffefffffeffff
fefffffefffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefefeeefafed6fc
ffa0e6ff47b6ee1faaf30aa5fa04a9ff07a8fe07abfe04aafd00a8fb00a7fc06abff07a6ff0096
f50090f60092fc0492ff0391ff0390fe0692fd0993fe0591fc008efb0596ff0091f61396fe297f
f100149400099f1413b71313c30f10c41315c71717c70a08b50000a30201a40202a20302a50403
a70400a50300a50000a60000a40001a30001a30000a50405a90606a00b0d8a6e71c2e6eafffbfc
fffffffbfffffbfffffcfdfffefdfffffffefffffefffffffefffffcfffffeffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffcfcfcfafdfff2feffdbfdff9ee4ff49b3
e91baaf505a8fe06a8ff03a8ff00a6f902aafd00a9fe01a9fe07aeff04a3fa0095f50090f90191
ff0491ff058efc0990fc0a94ff0791fc068efe0791ff008ffd008dfb2298ff0b5fd600078e1014
a91517bc1717c31b1ac40a07b00000a20703a80102a60001a300009d01039e00009f0000a20002
a60003a501039e0102a00101a70504a20f0b924c4aaadde2fff6fdfff7fafefdfcfefffefffdff
fffdfffffdfffffffefffffefffffffffffffeffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffdfbfbfbfafcf2fdffd9fcff9be1ff3fb1ed18a9f408a8
fc03aaff00a7fa02abfc03acff00a7fa02a9fa0babff0aa0fe0293f9008ffb0090ff0690ff078f
ff0692fd0891ff0a90ff0b92ff0090ff0194ff0490fb2797ff033eb900038b0f1ab21719bb0f0e
b20100a20300a40504a80000a50104a600049f00029c0002a10000a40002a40003a200019f0103
9e0303a309089438349bc7c5fff5f8fffdfffbf6f8f9fdfefffdfefffdfefffdfffffffeffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffefffefdfcfaf9fffdfffafdfff4fdffddfdff91d8fd44b3eb14a8f601a9fe03acfd01aa
fb02aaff04a9ff05a3fd0ba7ff10a7ff089dfd0092fb008efc0390ff038eff028ffe0893ff0991
ff038dfd0391ff0093ff0195ff0d94fe2688f60028a0000c94080fa202049f0202a20102a60000
a30001a50003a20105a000029f0103a70001a60000a00001a30001a50104a3060499201c8daeae
e4fafafffdfbfffffffffdfffff9fefdfdfffffdfffffffefffffefffffefffdfffffdfffffdff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcfdfbffff
fefefdfffffdfffffdffeff9ffd8fdff8edafe3bb5f10da4ee05a9f602abfc01a6fc06a8ff0ba7
ff0aa6ff0ba7ff0aa7ff019cff0091fa008fff008fff018eff0693ff0794ff008bf60492fd0191
fb0091fb0291fa1d9aff1c7be900158f0000830004940504a00000a30204a90002a400009f0001
9f00009e0002a70000a50000a30403a60000a501029a14128a8380cff5f6fff9fbfbfffdfffffa
fcfffffefafef9fffffefffffffffdfffffefffdfffffdfffffdfffffdffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffdfffff9fdfefafffff8fdfcfffffffdf8
fafcfdfff0ffffd6ffff89dbfa44b9ec15a9ef06aafd02a7fe02a6ff0aa9ff09a8ff00a7fe04aa
ff07a6ff009afd0093fc0092ff0191ff0491ff0393fc0495fb0592fb0b98ff018cfa0793fe078f
f92599ff0857c5000e8400008806059b0501a60404ac0000a00105a40202a20301a10301a70000
a40101a90102a600009d1311936461b0ebeafffafafffdfdfffaf8fefffefffefffbfffffcffff
fefffefffffefffffffffbfffcfbfffcfdfffffdfefffffeffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffdfffff8fdfefafffff8fdfcf8fbf9fffffffffefefcfefeeafd
ffd1ffff8bdcfd3bb3ee13a8f208a9fd02a9ff08abff04a7fd01a9fe00a7fe08a8ff05a4ff0099
fb0094fb0293ff0290fb0595fe0090f60895fe028ef90a92ff028cfc0894ff0e91f92c97ff003f
ae00027f00039004039f0000a30004a60002a40200a00500a10300a40000a30001a900009e0f0d
953f3c9fe0dffff8f8fff9fbfffdfdfffafbfffffefffaf8f7fffefafffefffffefffffefffdff
fffbfffcfbfffcfdfffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffdfffffcfffdf7fcfafcfefefcfffdfffffcfefcfbfafbfff4fcffedfeffd2fcff94e5
ff41b8f00ea7f200abfd00a8fd02abff09aaff08a7fe08a8fc08a9ff02a6ff009cfa0193f70994
fb0493fc0492fd0491ff0591ff0591ff0592ff0892fd0991fb1194fc238bf6002b9e00007b0107
960704a00000a00203a70504a204039f00009e0201a40002a60507952a298bc3bffafbf8fffffe
fffbfffffafffffbfffffffffffffefffffdfffffffefffffefdfffffbfffffdfffefdfffcffff
fefffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fefffffefbfbfbfffffef8faf4fcfffbfffefff9f9fffafdffe7f9ffc1efff4595dc2da9ff0fa8
ff03abff00a9fb04a5f90aa8fb0cacff04a8fb03a8fe05a5fd0296f40493f60493fc0391ff0390
ff0491ff0390ff0290ff0391fc0493fc0191fb1b9aff227ae4001c900000830003940709a40100
a301009e0504a20403a60102a005079b15178da1a0e0f7f3fffffcfffffffefbfffffafffefbff
fcfffffefffdfffffdfffffefffffffefdfffffbfffffdfffffffffefffffcfffffcffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfffffbfdfffeffffff
fbfbfff9f9fff9fbf9f8fffefff7fbfcedf7ff7785de04279f0a53cd309eff15aaff01aafb07af
fc03a9f606a7fb0cacff07aaff07a8fe0ba5fe0095f50292fb028fff038fff0490ff0191ff0091
ff0092fc0294fe0291fe0991fb1d9dff1273db000e8200038501099902029c0401a40200a40200
a902029c11148e6e71c2f6f4fffaf6fffffdfffdfffffbfffffbfffefffffbfffffbfffffefffe
fffffefffbfffffbfffefbfffefffffffffffffffffefffffcffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffefffffcfefffcfdfdfefcfbfffcfafffaffff
fcf8f6fcf3f6ffaaadea3634b01018b20013a9044ad32a9eff17acff04a9f803adfb07aaff08a7
ff04a6fe05a8fe0cabff09a4ff0096fb0090fd018eff0390ff0292ff0093ff0093ff0093fd0491
ff008af50395f9209eff0e5ec900067b0003860005960605a30400a30601a4100d985053aee4e7
fffbfafffffffffffefffdfefffbfffffdfffefffffcfffffbfffffefffffffbfefffafffffaff
fefdfffcfffffffffefffffefffffffeffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffbfdfefbfffffefdfffffffff7faf8f6faffcccbff3f3d
ae211eb71c1cc80b12c00012b50950dd2697ff0facff00a7fc05a7ff09a7ff06a5ff05aaff05a9
ff07a8ff049dff0197fc0091fb0090fd0392ff0392ff0392ff0393fd0391fc0995ff0290fb0b92
fc2099ff0050b900037800058900049903009a0f09983936a4d0d1fff6f9fffaf7fffdfafcfdff
fffdfffffffefffffffffffffefffffefffffefffffefbfffffafffffbfffefdfffcfffffeffff
fffffefffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffcfcfcfdfffffafffefafffefaf9fbfffdfff8fbffdadeff5552c02621b8120fb91613c71715
cc0712c0000fb20048d5209aff15acff0aa6ff08a8ff08abff01a6fd03a9ff01a5fe0aa8ff06a0
ff0098fb0092fa028ffd0590fe0491ff0492fd0492fd0894ff0690ff048ffd0995fa2197fc0040
ad00017900048c0d0c91292491b1adf8f0f3fff8fbfffefdfffffffffdfffffdfffffffefffffe
fffffefffffffffffffffdfffffdfffffdfffffdfffcfffffcfffffefffffffffdfffffdfffffe
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfcfefcfefef5fa
f8fafffbf9faf6fbfbffeeedff7775ce2320b21a18c80f0fc11214c6080ebb181fcc0b12bf000f
b30749d82d97ff19abff00a7f805adfb01a8f906a6fe0aa8ff0aabff08a8ff03a2fe0098fb048f
fd068efe0492fd0393fd0494fe008cfa058fff0890ff0a92fc1794fc2c92fc00309d0003740e14
759a99d7f6f6fff9fcfffafef8fffffcfbfcf8fffffcfffffcfffefffffefffffffffdfffffbfe
fffdfefffffdfffffffffffffcfffffbfffffcfffffffffefffffdfffffeffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffefffffffffefffffe
fffffffffffffffffffffdfffffdfffffffffffffffffffffff7f9f9fdfffcfbfefcfafefff2f4
ff9695e52c2ba91717bf0e10c91214cc0d11c31218c50f13c01711c41417c6000baf0242d02599
ff19aeff05a8f708b0fe05a5fd0aa9ff05a8fe06acff07a9ff03a0fe0393fd0390fe0393fd0393
fd0390fe0693ff038fff0490ff048ef90e95ff1393fa298ff200318e4561a8dfeafff7f9fffdfe
fafffff9fffffbfffffcfffffbfffffcfffefffffefffffffffdfffffbfefffdfefffffdfffffd
fffffffefffffcfffffefdfffffffefffffefffffeffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffefffffffefffffbfdfffbfdfffffdfefffffdfffffefffffffffdff
fefbfffefbfffefffffffffffffffdfdfffdfcfdfcf8fdfefff2f7ffb3b8f53032ae1b1dbf0f11
c30e11ca1212ca1412c91311c81413c71714c41513c30e15c3000eb20039c72994ff21b3ff00a5
f202aaff02aaff01a9fe03abff02a7fd0aacff07a4ff0093f80093fb0191fb0792ff0390ff0091
fe0192ff0290ff028ffd0493fc1898f72f93e15ea0d5bcd8f0e1e7ecf4f4f4fffffefffefdfeff
fdf8fffcfafffefffefdfffdfefffffffafcfdf9fcfffdfefffffefffffefffffefffffefffdff
fffdfffffffffefffffcffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffefffffffefdfffbfbfffbfbfffefdfffffffdfffffdfffffffffdfffefbfffefbfffeffff
fffffffffffffffffdfcfffefef5f7ffd6d9ff454aad1e22b70f13c50f12c80f11c91311c91510
c91510ca1511c81513c31513c31511c80d15c60013b2003ac11d8df71fafff0bacff00a7fc00a9
fe00a7fc04acff00a5fb04a8ff0aaaff0098fb008ff70492fd0491ff0092fc0090fd0090ff0393
ff0094ff0794f5209ded3e9fd97bb1d2bad5e3e1e8ebfdfbfafdfafcfbfafcfafffffafffefffe
fdfffefdfffffffffffffdfffffdfffffffffffffefffffefffffffffffffffffffefffffeffff
fcffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffffffefffffefffbff
fffbfffefbfffcfdfffcfffefffffefffffffffdfffffbfffffbfffffffffffffffefdfbfbfdfc
fef5fafde9efff635fc92521b6191cbe0c10bc1114c31211c51610c9160fca1510ca1210c81313
c51313c51915cc0f0ec20c1bbe0011a60025ac2787f922b2ff03abf901a6fc04acff01a9fc00a8
fb06acff06a8ff02a0fe0099fc0092f70093fb0393fd0391fc0390fe0491ff0690ff098ffe0f92
f9269af1429fdc6baaccc1d9dfe0e4dffbfafefffdfffdfffffcfcfcfffefffffcfdfdf8f9ffff
fffdfffff5faf9fdfffefffffefdfffefffffefffffcfffffefdfffffdfffffffeffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffefffffffffefffdfffffbfffffbfffffbfffefdff
fefffffffffffffffffefdfffffdfefffdfffffffffefffffefefdfffbfbffedf2ff7f84cf2723
b21813c21618c41317c31513c31511c41611c81710cb1510ca1210c81011c51113c51611c81c18
cb0c0eb30004a000039b0024a91a83ea27b2ff0da8fd00a6f905adff04adfe02a8fb03a8fe05a5
fd09a8ff009af80094f80392fb0793fe0691ff048efe048eff0990ff088fff0d90f72199ec44a3
db7aacc8bfd5e0dde3eef2f1fafdfefffdfafcfffdfefffefffffefdfffefdf9fefcfafffdfbff
fffdfffffdfffefffffcfffffcfffffefbfefffbfefffdffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffefffffefdfffffbfffffbfffffbfffffffefffffefffffffffffffeffff
fcfdfffcfdfffffffefffffffefffffef8fcfdf1f3ffa7a7fb2d2cac1918bb1413c70e0cc31614
cb1713c61713c61712c91711ca1510ca1210c81112c61515c71a14c7110ab90200a30002a00005
a300069a001e9e1d75e129b4ff09affc00a7f800a8fb04a9ff05aaff0aabff08a9ff08a7ff029c
fb0192f8048ffd0690ff058fff0390fe0491ff078eff0c92ff0992f6209aee489fe172a9d6bed3
e8e1e5eaeef3f4fdfffffffefffefaf9fffffcfdfffcf7fcfafbfffffbfffffdffffffffffffff
fcfdfffcfbfffefbfefffbfdfffdffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fefdfffefbfffefbfffffdfffffffefffffdfffffdfffffffffdfffefdfffcfdfffcfffffeffff
fffffffffbfefff3f8ffc5c6ff3c38b5211cbf1313c31515cd110ec8130ec71611c81611c61410
c71410c71311c91513cb1314c81515c5100bba0100a30b06a90503a30306a500059f000697001a
980f74da24afff14afff01a4fa06a8ff04a7fd07abfd06aafd0babff08a5ff069bfd0293f90090
fa0291fe0393fd0491ff058dfd0a92ff0593fe068ff32296ef469ee477abd3b8d4e5d7e5ebf2f6
f7fffefffffefefbfcfafcfffbfbfffef5faf9fdfefffdfffffffffffffffefdfffefbfffffdfd
fffdfdfffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfffefbfffcfbfffcfdff
fffffdfffffcfffffefffffffefdfffffbfffffbfffffdfffffffffefffffefdfffff6f9ffdadd
ff4e50b42422b8100dc01112c80d0dc51915cc1510c7140fc81210c80f10c61011c71412ca1814
cb1310c30e0cb90000a30905aa0000a20103a50003a20004a100069e000b990012901166d425a7
ff0ea9ff05a5f908acfe01a8f904acff04a7ff08a9ff09a8ff04a0f90098f90094f90091fe0690
ff088ffb068ef8058ffa0a93fa0c91f2229cf03499dd5da1ceb4ccdedadde1ebeef3fdfefffffe
fffbf9f9fdfffffcfefffffefffffffffffffefdfffefdfffffffefffffdfffffdfffffeffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffdfffefdfffefdfffefffffefffefffffdffffff
fefffffefbfffffafffffdfefffffefffffffcfffefffafaffeff2ff676ac52c2db31414bc1414
cc0d0dc51816cd120dc21712c71412ca1212ca0f12c80f12c81513ca1512c60b09b70100a80300
a50000a20103a70003a50001a00002a10004a300059f00099a000a8d005acb2ca8ff19abff03a3
f703abfe00a5fc02a5ff05a6ff09aafe0aabff00a5fc0099fa0090fa018efc0491fa0993fd058f
fa0692fd0190f90794f5169bf2369ee168a1c8b4cfe3cddde9e5ebf2fffefffffcfefcfdfffdfe
fffffffffffffefffffcfdfffefffffffffefffffefffffeffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffefffffefffffffffffffefffffbfffffbfffffefffffff7fbfcfbff
fffbfafcfefcfcfffdfcf8f9fff1f2ff8a8cda2a2cae1415b90f11c31215cb1113c51212c21813
c81410c71415cb0e11c70d12c51317ca1613c60604b20000a60502ab0300a70100a50000a40002
a10001a30001a30000a50000a40003a000099b000c94034ac32ba1ff1cb1ff00a3f905adff07a8
ff09a7ff07a6fd09aafe08aeff02a6ff0097fa008ff70194fc0393fd0491ff038fff0090ff0193
fd0694f91496ef39a6ea4798c5a2caddcedee4e6ebeefdfffffcfcfff8f7fbfffdfefffffeffff
fcfcfbf7fffffcfbfffafffdfdfffeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffdfffffdfffffefffffffefffff9fffff9fffffefdfffffafefffcfefffffefefffffffafc
fdf5f7ffa8a8ee3a3aac1a1bb91213c71013c90f12c80f11c31212c21613c61312c60f13c60e13
c61317c91115c20606b20000a80101a70000a60100a80000a70000a40002a10002a10100a30300
a70100a70305a900009d0009a1000993003ab32497ff21b0ff05a4fb06a5fd06a6fe09aafe08a9
fd01a7fa04a9ff07a5ff019afd0093fb008ffc028fff0592ff0292ff008ffe0090fd0896fb1098
f22f9fe5509ac498c5dabcd6dddbe7ebf4f8fdfffefffff9fefffcfdfffffcfffffafdfff9fafe
f8fefefefffdffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfffffdfffffe
fffffffffffffcfffffcfdfffefdfffffdfdfff7f6fafffffefdfbfbf7fcffcacffc4947b81c1a
b41213c11113cb0f11c90c0fc51112c81413c71212c21013c20e12c51317ca1214c00708b00100
a30000a20000a40000a50000a70000a50001a40001a30102a00500a10600a50500a70000a40305
aa0001a500039f000899002ba92b93f825adff0ca9ff00a8fb04a9f808abfa09a9ff09a8ff09a9
ff0aa7ff049afe0193fd008efe008fff0590ff0690ff0890ff0b92fe0a8ef91997f62b9dea3995
ca86c0d6bbdbe1d3dfe3f4f5f9fffcfffcfafff9fdf8f9fff7fafff8f9fff9fcfefefcfbfdffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffefffffefffffefffffffffdfffffbff
fffbfffffdfffffefcfffefdfffbf9f8f9fbffe1e3ff5659ae2826b51817c51112c80f11c90d0f
c70f10c61412ca1213c91114c31215c41416c81111c10606ae0000a20402a20202a20000a20002
a50000a50001a40001a30002a10301a10500a30600a50500a70400a80401aa0000a50001a50306
a400078f0022852489d727adf312adf20aaef605adfa05a6fc06a5ff07a9ff05a7ff07a4ff069f
ff0196fe0090fc018efd0791ff0b91ff0a90ff0a8fff098ffe0d93f8279eed449dcf6fabc8b4d6
e6d1e0e9e9ebf5f9f9fffdfffef9fff9f8fff8fbfffcfdfffffafcfcffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffefffffefffffffefffffffbfefffbfefffbfefffdfefffefa
fffcfbfdf7fcffeef2ff7471d42623af1312b61215c41113c51011c51412c91412ca1210c71112
c81314c81417c61011bf0404ac0000a30301a10200a00101a10003a50001a30002a40002a30003
9e01039e0300a30300a50300a50100a50501a70400a60a04a900009f0402a2050b92142b8193c4
fc7bd2fe40b9ea0fabec02aefa04abfc04a9ff03a9ff00a4fd02a9ff05aaff07a5ff029cfb0093
fb0190fd058fff0890ff058fff038dfd0b91fd0e8ef41d95ee3ca1e6559ac59fc8dfcdd9e3f1ee
f0fff9fefffcfffefdfffbfdfdfbfbfbffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffefffffffffffffcfdfffefbfffffbfefffdfdfffffefffcf9fbfcfbfff3f7ff9499
de2823ae1c18c51414c40c10c21114c31313c51613c71511c81210c71314ca1214c60b0fbc0203
ab0100a40200a20301a10000a20001a00001a30002a40002a30003a100039e0102a00100a50100
a70000a50000a40100a10803a60300a10d09a50100921b1c8ea0a2e2e2f5ffcafaff8ddffe3db7
eb13a8eb0faef807abfd00a4fd03a9ff03abff03abfe07abfe08a8ff03a0fe0098fb0191fb028f
fd0291fe018efd0a90ff0a8ffe0c93ff1795f33a9fe35099c598c1d8c3d3dfe3e3effaf5fefffd
fffffefffbfbfbfffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffdfefffdff
fffdfffcfdfffbfdfffefdfffffffefffffefffffefef5f6ffb1b1f73636aa1717b71011c71415
cb1112c61113c51414c61511c41510c51713ca1413c7080bba0104ad0000a10302a50300a50000
a30003a50002a10000a00103a50101a10101a10300a40300a50000a80000a80000a50001a30102
a00504a20300a30503981216878388d3eef0fff4f9ffebfbffdafeffa1e1ff58bbed22acee0aa8
f604a5fb06a8ff06a8ff05a7ff01a9fe03abfe07aaff05a5fd019afc0095fa008ef80695ff0790
fe0790fe0691ff0891f71498f32c9fe8449ace7ab3d3b5cfdfdee7ebeef0f1fffefdfffffff9fb
fbffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffefffffefffffffffffffffefffffefffffeffffff
fffffffffffffefffffefffffefffffffffffffffffffffffffdfffffdfffffbfffefbfffcfdff
fcfffffefffffffffdfff9f9ffdadaff4b4ab81d1bb41718c60e10c80f0fc71415c91212c41515
c51512c21714c41b17ca0f0cbf0000ab0000a40504a70100a30000a40000a60002a40004a30204
a60000a20301a10301a10300a50100a70000a80000a70000a40002a10104a301009c05039c100f
8d6e72c0eef2fffafafff9fafefbfeffeffaffe3fdffb5ebff61c2f42cadec1aabf60ba5f807a6
fe04a8ff02a9ff00a8fb04aafd08abff05a7ff019ffd0096f90092f80391fc0792ff028ffe0190
fd0393fc0c94f2299fec3c98d36caacea9cee2cedde6eaedf1f8fafafdfefcffffffffffffffff
fffffffefffffefffffefffffffffffffdfffffdfffffffffffffffffffffffffffffffffffdff
fffffffffffffefffffffffffeffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffdfffffdffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffcfffffcfffffefffefffffdfffffdfffffefffffefffdfffefdfffcfdff
fcfdfffcfdfffefdfffefffffffffffffcfdfbfcfefef6fafbfafffffbfffffbfdfdfdfcfef9f7
ffededff6365bd2424b41412c21210c71412ca1112c61013c21413c11616c21917c41614c10b09
b60000a90000a50102a60000a40001a30000a40000a40001a30001a30000a40001a30000a00001
a00103a50002a60000a20002a10306a40002a10000a404039f110f915958b4e9e8fffbfcfffafa
fffbfffff8fffff6fffff2fbffe8fbffccf8ff8ad5fb3cb0e71aa9ed0aacfb00a9fe04a9ff04a6
fe04a9ff06abff00a8fb07adff04a4fc029cfb0393fc018efd008efe0191ff0592ff0690fa0d94
f61f9cf1319ee24b9acd96b9dad0dbe9dfe4e3fbfbf5fbfdfdfcfefffefffdfefffbfffffafdfe
fafdfdfdfcfefffafdfffbfffffffffefffefdfffdfefffdfffdfffffbfffffdfffefdfffcfdff
fefdfffcfffffefffffefffffefffffefffffffffffffffefffffefffffffffffffffbfffefbff
fefdffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fefffffefffffffffefffffefffffefffffefffffefffffffefdfffcfdfffcfdfffcfdfffeffff
fffffefffffefffefcfbfffffff9fcfff7fafefdfffffdfffffbfcfff4f4ff7f81d5292ba81515
bb1413cd1210c8100ec51112c61316c51514c21a19c31514be0707af0000a60000a50001a50000
a40000a40000a40001a30001a30000a40000a40000a40000a40003a50002a40000a00002a40202
a200019f00009d0304a20503a30e0d994342a4d8d8fffafafffcfbf7fffefff7fafef4fcfbf8fe
fdfffffefefdfff2fcffd5faff98e2ff51bfef22aaec0fa9f60aaafe07a9ff03a5fe01a6fd01ab
fd00aafa06acff06a6fe079dff0496ff0090ff008dfe028ffe0491ff008ffc0694f91499f52e9a
e74c93cc79a6c8b7d1dfd4e3e5edf2f5fafcfdfffffefefffbfffffcfffefafcfcfcfdfffffbff
fffbfffffffffffffffefffefffffffffdfcfff9fbfcfdfffffdfffefdfffefffffefffffeffff
fefffffefffffefffffefffffffffffffffffffffffffffffffbfffffbfffefdffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffefffdfffffdff
fffdfffffdfffffffefffffffffffffffffffefffffefffffffffefffffefffffdfffffdfffefd
fff7f7f7fdfffffafcfcfafbf7fbfcfff8f8ffa8a8e82f30b01616bc1916c6130fc61413c71413
c71210c71413c71918c61211bb0706b00000a70000a50000a50001a50000a40000a40000a40000
a40000a40000a40000a40000a40000a40003a60000a30100a40100a20501a60605a90000a10102
a00a099b3837a5cfd0fff8fbfffafffff8fdfcfffdfffffdfffbfffff6fbf9fffefffffefff6f9
fdf0fdffe4feffbcf0ff74cbf737aeec12a7f702a7fe05a8fe0aadff03a8ff01a8ff02aaff02a9
ff05a5ff059fff089aff0592ff038ffa0490fb0594fd008df60b93fd1192f528a0f33da1e1579d
c59ec8dfcedae4e8e7e9fafafafdfbfbfdf8f9fffefffffffbfcfbf7fffffefcfffdfdfcfefefe
fefffffefffffefffefffffdfffffefffffefffffdfffffdfffffdfffffefffffefffffffeffff
fefffffefffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffdfcfffdfdfffbfffffbfffffbfffffbffffffff
fffffffffffffffffffffffefffffefffffefffffdfffffdfffffdfffffefffdfdfdfdfbfafeff
fdfdfefcf7f9ffccceff4547ab1d1cba1614cc1410c7100dc11818ca1313c5100fc31a17ca1210
bd0505ad0000a40000a50202a80000a50000a30001a50000a40000a40000a40000a40000a40000
a40000a40000a40005a80000a20501a60a02a90200a40100a30504a7050696232395b0aff7f8f9
fff9fcfaf2f7f5fafefffdfdfffbf9fffcfefefcfefefffefefefcfcfbfbfbfcfefefbffffecff
ffcefcff8ad9ff42b4f023adf517abf90ba7fa0aabff00a6fd00a9fb01aaff01a7ff05a5ff0ca2
ff0a9dff0596fc0395f90092f60695fe0491ff0390fe0091f41297ee379fe44d96c88cb6d3bfd4
e3d7e2eaf1f4f8fffefffffcfbfffffcfffffcfffffefffffffffefffffffffefffbfcfdf9fffe
fefffefffffefffffefffffefffffefffffdfffffdfffffffffffffefffffcfffffefffffeffff
fffffefffffefffffffffffffeffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffdfdfffdfefffbfffffbfffffbfffffbfffffffffffffefffffefffffe
fffffefffffffefffffefffffffffefffdfffffefdfffffefffffafbfffdfdfcfcffe3e5ff5a5f
c61e23b41616c2110fc61211c51112c61314ca1112c61615c3110fbc0000a90000a70000a70000
a60000a60000a40000a40000a40001a30001a30000a40000a40000a40000a40000a40000a40002
a50103a70400a40c03ad0500a70600a605059f1519909c9fdcf6f7fff9f8fffefefefdfffffdff
fffafcfcfdfffffbfbfbfffffffbfdfefafcfdfdfffefbfffef7fcfdf1fdffeefeffe1feffbbf0
ff76caf438aced19a7f408a8f604aefc02acfa04adfe05aaff03a8ff08a7ff08a7ff06a3ff06a1
fe0398f8008ff30093fb0294fe0093fb0897fa1597f62e9ef03f9ad763a5ceabcbe2ced9e1e5e9
e4fffff7fbfaf6fffefefffbfffefdfffdfffffdfffefffffefffdfcfffdfcfefffdfdfffcfdff
fcfdfffffdfffffdfefffdfffffffffffffffefffffefffffefffffffffefffffeffffffffffff
fefffffcfffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffefffdfffffdfffffdfffffdfffefdfffffffffffffefffffdfffffefffffffffffffeffff
fcfffffefffffffdfffffcfcfcfcfcfcfffefffdfcfff0f2ff787cca2127b01115c11111c31514
c81615c91213c70f13c61214c6100fb90100a50000a50000a50000a60000a50000a30001a50001
a50000a40001a30001a30000a40000a40000a40000a40000a40000a40000a10305a90400a40500
a40900aa07039e0c0e8b7579ccf2f6fffcfefffcfbfdfefbfdfffcfefbfbfbf9fcfafcfffbffff
fffcfcfcfbfdfefdfffffcfefef8fafaf7fcfdfafffff7f8f4faffffecfeffd1faff8fddff48b6
f025abeb16acf20caaf707aaf905acfd04aafd03a8fe05aaff08abff08a8ff08a4fe049cfb0098
fb0093fb0091fb0393fd0290fb0a90f51e97ed3ca1e5569ac991bcd7c4dbe3d6e3e1f4f8f9fffe
fffffefffdfefffdfffffcfffdfffffffffffefffffefffffcfffffbfffffbfffffefffefffdff
fffdfffffdfffffdfffefffffefffffffffefffffdfffffefffffffffffffcfffffcfffffeffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcfffffcffff
fefffffefffffffffffffffffffffefffffefffffefffffffffffffefffffcfffffeffffffffff
fffcfffbfdfefafffffff2f2ff9596ee2e32b61117b60d12c11313c31411c41110c41214c60f14
c30509b50200a80300a40301a70000a40000a30000a40001a50001a50000a40000a30000a40000
a40000a40000a40000a40000a40000a50000a50002a60000a40501a60400a20601a20b0b8d595d
abe8edfff7f8fffdfcfefffdfffffdfffffdfdfffffefdfffcf8fcf7fefefefdfdfdfffefefffe
fffffcfffffefffafffef4fbf8fbfffefafffdf9feffeefeffdcfeffb9f1ff7bcefb3fade922ad
f60aa7f705a9fb04acff00a8fd03a8fe08abff08a9fd07a6fd0cabff02a0fe0098fb0193fd028f
fd0693ff0892fd1296fb1493ef279eed3599d46aa8ceaccde1cdd9e3e5e8ecf6fafbfafeffffff
fffefefefefdfffffffffffffefffffbfffffcfffffcfffefffffdfffffefffffffffbfffefbff
fefbfffefdfffffffefffffdfffffdfffffffffffffcfffffbfffffeffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffff9fffffbfffffeffffffffffffffff
fffffffefffffffdfffffbfffffdfffffdfffefdfffefffffefffefffffffffcfffaf7fdfcf7f8
ffb9b9f93738b81618bd1114c31214c61714c71311c11616c81616c6050ab30000a50000a20501
a60100a40001a50001a50000a40000a40001a50000a40000a20000a40000a40000a40000a40000
a40000a40000a50000a50000a40100a40201a504049e0b0b9534369ad1d4fff7fbfffdfefffffd
fffefafffffbfffffdfdfffffef7faf8fdfffefcfdfbfffffefffffefffdfefffdfffdfcfff7fc
fbfbfffef9fefcfdfffffffdfdfdfcfef3fcffe8feffcef9ff9de2ff57bbf22dabec17a8f30fac
fc04a7fd02a7fd07aaff04a8fb09aafe08a9ff06a8ff08a6ff059dff0295fd0191fb0391fc0490
fb0994fb0796f91e9ff63b9ce05496c98cb5d5c2d9e9d3e3eae9f1f1fbfdfefffffffefdfffffe
fffffffffffffefffffefffefffffdfffffcfffffdfffffefffdfffefbfffefbfffefdfffffffe
fffffdfffffefffffefffffffcfffffcfffffeffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffbfffffcfffefffffefffffefffffffefffffcfdfffef8fd
fcf7fcfdf7fbfcfafefffbfdfdfffefefffefffefcfcf6fff5f3fdffc9ccff4a4bb91b1cba1314
ca1311c9120ec51512c51816c61212c20406b20000a30000a10000a40000a30000a40000a40001
a30001a30001a30001a30000a40000a40000a40000a40000a40000a40000a40000a40000a50000
a40201a40403a60102a607099723258bb0b3f0f5f6fffbfbfffdfffffffefffffdfffffeffffff
fefffffefffefffffefffffffcfffffbfffffcfffffefffffffdfffffbfffffbfffffdffffffff
fffffefffffefffdfdfff6feffeffeffe3feffcef7ff97d8fe4eb7f023a9f110aafd06abff06a9
ff03a7fa06a8ff05a7ff07a6ff07a6ff03a6ff04a7ff059eff0294f80491f80791fb0990fc0b92
fc1195fa2599f0429cdd5f9dc6abcadfccd8dee4e7ebf9f7f7fefefefefdfffefdfffafcfdfbff
fffbfcfffff9fffffbfffffafffffbfffdfffffafdfbfdfffefdfffefbfffffbfefffbfefffdff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffcfffffefffdfffffdfffffefffffffefffffcfdfffcfafffef6fbfcfafffff8fd
fcf9fcfafffefdfffdfffdfcfff4fdffd6e0ff5154bc1f1db21917c7110dca1712cc1915cc1a18
c80e0eba0202ae0000a70201a50302a50201a40000a40000a40000a40001a30001a30001a30001
a30000a40000a40000a40000a40000a40000a40000a40000a40000a50000a40201a400009d0505
9f0c0e8a8386caedf1fffbfbfffffefffffefffffefffffdfffffefffffffcfffffcfffefffffe
fffffffcfffffbfffffcfffffefffffffbfffffbfefffbfefffffefffffffffffefffffefffffe
fffffefffdfffffafffff4feffdffdffafefff6ecdfe37b0ee1ca6ee17a9f511abfc09aafe05a7
ff08a8ff0aaaff02a9ff01a8ff07a5ff0ba3ff0496f90494fa0591fc028ffe008fff0794fd229a
f343a2e75596c288b3ceb7d1e1cfdce4e2e9ecf9fbfcfbfefff9fefff7fffef4faf9fffefffffc
fffcfafffdfefffafcfdfdfffefffffefffffefdfffffafffffafffffbfffffffefffffeffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfffefdff
fffffdfffffcfffffefffffffffffffcfdfffcf8fdfcf7fcfbf8fdfcfbfffcfdfff9fcfcf6fffd
fcfaf9ffe4eaff626ac32a2aba1712c11810c9160fca1612c91513c30f0fb90404aa0000a20000
a30302a50201a40100a30201a40001a30001a30001a30001a30000a40000a40000a40000a40000
a40000a40000a40000a40000a40000a40000a40000a40002a402029c0f0d95504fb1e2e2fffafd
fffafdfffcfefffffffffffefffffcfffffefffffffbfffff9fdfffffbfffffbfffbfbfffbfdff
fefdfffffbfefffbfefffbfffffdfffffffffefffffcfffffefffffffffefffdfffffbfffffaff
fff4fdffeefdffe8ffffd8ffffb1edff75ccf43eb0ec1ca6ee10aefc03a9fc04a8fb08a9ff05a7
ff08a8ff0baaff0cabff0aa8ff07a2ff039afc0496fa0290fb068df90d90f71a96f42ea2ef3a9c
d8579fc790bed6c6d8e3dce2e7ebf1f6f5fdfdf7fffafafff8f8fcf6fdfffefbfffff9fefffbff
fff9f8fafffffefffffefffffcfbfffcf8fffefafffffffefffffdfffffeffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffbfffffbfffffdfdfffdfcfffdfe
fffffffffffffcfffffcfdfffffafcfcfafdfbf9fffaf8fff8f9fefdfbfcffeeeeff7074cc1d21
a51916c01811ce170dcb1a12cb1816c60707b10000a50001a50302a50303a30100a30000a20100
a30201a40001a30001a30001a30001a30000a40000a40000a40000a40000a40000a40000a40000
a40000a40000a40000a40000a40201a4080898221f8cb9b7f9fafafffcfdfbfdfffffbfdfefdff
fffdfffffdfdfffffefffffffbfffff9fdfffefbfffffdfffefdfffefbfffffbfffffbfefffbfe
fffbfffffdfffefffffcfffffcfffffefffffefffffffffffffdfffefbfffff4f9fafafffeffff
f9f9fffbecffffd0fbff97e2ff61c7fb31ade91facef17acf60eabfb07a8fe05a7ff07a8fe06a7
fd06a9ff07a9ff09a8ff08a3ff0699f90290f5008ff80393f90491f2199aef39a2e54c9bcc72a5
c5a5c6dac6dce8ddecefeefbf3fafff8fdfff9fbfdf7f9fefcf9fffef5fafbfdfffffffeffffff
fefffffcfdfffcfafffcfafffffffefffffdfffffeffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffdfffffdfffffbfefffbfefffbfffffdfffffffffeffff
fefdfbfbfdfbfafefffbfbfffef5fcfff4fbfff1f4ff7679c42628ac1f1dc31611c8150ecb1e15
d01713c60303a90004a30000a30001a50602a104009f00009f0001a30201a50201a50000a40000
a40000a40000a40000a40000a40000a40000a40000a40000a40000a40000a40000a40000a40000
a40100a40501a60f0c917978bcf5f6fff6f8fffffffffffefffefdfffdfffefbfffefdfefffffe
fffffffefffffcfffffcfffffffffefffffdfffffefffdfffffdfffffdfffffdfffefdfffefdff
fefffffefffffffffffefffffcfffffcfffffefffefffffffffefefefdfbfbfcfbfdfafdfff1ff
ffdefeffccfcffa5e3ff6fc4f138aee91aaaf109acfb00a9fe04a9ff08acff01a9fc02aaff05aa
ff07aaff07a8fc05a4fb009dfb0096f90292f80b93f91494f3279df0329bde499bca87b8d2b7d1
ddccdde0e4ebe8fcfbf7fffffafffffbfdfffcf9fffef8fdfefffefffffefffffffefffffcfdff
fcfdfffefffefffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffdfefffbfefffbfffffdfffefffffefffffefffdfefffffefdfb
faf3f7fcf3faffe7edff7477c82f2fa51b19b9130fc6150fc81712c9120dc20404b00003a20001
9f0003a50100a404009f0600a10201a40001a50000a40000a40000a40000a40000a40000a40000
a40000a40000a40000a40000a40000a40000a40000a40000a40000a40000a40101a108049f2b28
9bd8dafff7fbfcfffefffbf9f9fffdfdfffffffdfffefbfffefdfffffffefffffffffffffeffff
fefffffffffdfffffdfffffefffdfffffffffffffffefffffefffffefffffffffffffffeffffff
fffffffefffffefffffefffefffefcfcfffdfdfffcfffffcfffffefffffffffafffff1feffe7fd
ffcbf7ff95e5ff59c6f92cafee18abf114abf50aa8f507abfd01abfd00a8fd01a9fe06adfe08ae
ff05a7ff009ffb0096fb0090fa0092fc0391f61399f12ea2e9489bcf5d99bd96bfd8bdd7e7d8e1
eaf0eff1fdfcf8fafcf6f8fffcf8fefdfdfefffffefffffffffffffefffffefdfffefffefffffe
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fefffffffffefffdfffffbfffffdfffefffffefffffcfffafafffefffaf7f9f8faffdfe3ff7579
d22b2bb51e1ac01816c41512c51817c50d0fbb0000a80004a90001a30000a20100a30200a30500
a50700a70701a60400a50000a60000a60000a50000a40000a40000a40000a40000a40000a50000
a50000a50000a50000a40000a40000a40000a40000a405039d120c936a67c3edf4fff4fbf6ffff
fffffdfefefdf9fffffbfdfffcfdfffefffffffffffffffffffffffffffefffffefffffefffffe
fffffffffffffefffffefffffefffefffffefffffefffffefffdfefffbfffffbfffffbfffffdff
fffdfffefbfefcfdfffefffffffefdfff9fdfefafefffefdfffcfefff7fdffebfdffe1ffffcbfa
ffa3e4ff71c8f43eb3ea1da9eb0ca7f604a9ff04abff02a9ff02a7fe06a7fd0baaff0eadff09a8
ff02a1ff0095fc0092fa0692f61094f21e9cf430a0ec3c97d45a9bc8a2c4e2d2dfefe2e4e5f8f5
f1fbfffcfafffefbfffffdfefffffefffffffffffffffdfffffdfffffdffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffefffffefffdff
fffbfffefdfffcfffffefffffefffefff7f4fdf8f7ffd7daff6569c1292cac1514be130dca1612
c51a18c50a0bb30000a40002a50000a20001a50403a70200a20600a50400a80500a70500a40600
a60000a80000a70000a40000a40100a40000a40100a40000a40100a40000a40100a50000a40100
a40000a40100a40000a40100a40604991b178ea2a1ebeef5fffafffcfef9fbfffdfefffffafcff
f8fdfffcfdfffefffffffffffffffefffffefffffefffffefffdfffffdfffffffffefffffeffff
fefffffefffefffffefffffefffffefffdfefffbfffffbfefffbfffffbfffffbfffefafffdfafd
fbfcfcfcfcfefefafffffafefffffcfefffcfefdfdfdfdfffffafffef1fdffe5fdffcdf9ff9ae7
ff69cdfd3bb2f027adf318a9f411a9f70ba9fc08a8fc0aa8fc09a9fd04a9ff04aaff06a8ff04a0
ff0498fc0192f80090f80493f41f9af03ca1e64d95cb77a7cbb7d3e4d0e0e6d9e5e5f1f9f8fbff
fffdfffffdfefffdfffffbfffffbfffffdfffffdfffffffeffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffcfffffafcfbfdfefbfffffbfffcfdfffcfffb
fdfffbfffdfcfef4f8ffbbc0ff5255c12126b11416ba100fc31b17ce1915c20d0bb10200a60100
a40302a60302a60201a50400a50300a40300a40300a50300a50500a40300a40100a50100a40100
a40100a30300a30100a30300a30100a30300a30100a30300a40100a30300a30100a30300a30100
a30300a3080695302d94bcbcf8e9edfffbfffffffcfefefbfdfdfffcfafffbfafffbfbfffcfffe
fffffefffffdfffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffefffdfffffdfffffdfffffdfffffdfffffdfffffffffffffffffffffffdff
fffdfffffffffffffffffffffffffffffdfffffbfffff6ffffefffffe4feffd6feffb3eaff86d2
fc53b9ea30aee918abf10caaf808a8fc06a9ff03a5fd06a8ff05aaff04a8ff08a7ff07a5ff009b
fe0091f50a93f71091ee28a1f0359fdc4695c081b6d1c1dbe9d4dde1ebeaecfbf8fafbfefff7fe
fff7fffefafffefcfffbfefffbfefdfffffefffefefefcfcfcfafcfcfbfdfdfefdfffffdfffffe
fffffefffffefffffefffffbfcfffffffdfefff9fdfef9fffaf4f6f6fdf9fffaf6ffedefff9397
d84044b5181aae1316be1115c8191ace100ebe0401aa0100a30100a20100a30400a50000a20100
a20000a20300a40100a30300a40100a30300a40100a30300a40100a30300a40100a30300a40100
a30300a40100a30300a40100a30300a40100a30300a40100a30300a40100a30300a40805962421
8eaeacf2dbddfbe8ebf3f7f5fbfcf9fbfdfffefafffbfbfffcfdfffefffefffffdfffffdfffffe
fffffffefffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffff8ffffecfeffdafeffb6f3ff8adeff57c3
f333afeb24aaf01daefa17acfc0da9fc03a7fa00a7fa01a9fe06abff0aa9ff0ba4ff0398ff0598
fe0196f10f99eb2fa4e7429cd2629dc498bad7c6d7ead1dbe5e0eaf1f2fbfef7fffef9fefcfeff
fbfffefafdfbfbfefbfdfefefefdfffffbfffefcfffdfefefefffffffffefffffefffffefffffe
fffefffbfdfefcfdfbfffcfbfffcfffdfafefff3f5ffc1c2fe5c5abe2825aa1d19b81715c31919
c91316c50708b60101ab0000a30001a00201a40003a20100a30001a00100a30104a30100a30002
a10100a30002a10100a30002a10100a30001a30100a40000a40100a50000a40100a50000a40100
a50000a40100a50000a40100a50000a40100a50000a40100a505029e120a93564fb7bcbff2d8de
f1e8e9f3e9e8ecf2f0f0fffffefffffefffffffffefffffefffffefffffffffdfffefdfffeffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffdfffff6fefdf1feffebfeffe1fdffd0f9ffaeeaff7dccf74cb4
e92dabeb16a9f107a9f803abfe03abff03a8fe07a6fd08a7ff04a7ff03a2ff029cfb0094f20995
ef1c9bf02c98e94198db5c9aca9ac2dfc6dce8d7e0e3ebedeefdfbfbfdfdfdfffdfdfffefffffd
fefbfbfbf6fbf9f8fef9fcfffbfffefdfefcfbfffefffffffffdfffffbfffffbfffcf9fbfbfffb
fffffcfffdfffff2f7ffa7aae13e409f2522ad1a16bc1713c61714c81818c40708b00000a60000
a50103a50303a30202a20000a000009f0000a00101a10101a10101a10101a10101a10101a10101
a10101a10101a10100a30100a40100a40100a40100a40100a40100a40100a40100a40100a40100
a40100a40100a40100a40100a40100a40301a108019e120c8f3e40987075ac8a8ab2b4b1cae9e6
effffefffffefffffefffffefffffffffdfffffdfffefdfffffdffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffefbfffafffffbfffffcfefefef7fdffeafdffd3faffb6f4ff83d9ff5dc8fb3ab4
f024abef1babf217acf611acf50babf905a7ff01a4ff0aa8ff0aa7ff019dfe0096f50594f51c9a
f2359be44997cc70a6c7a1c6dac4dae6d5e0e8e7eaf2fbfafefffafbfffdfcfbfffffafffefbff
fcfdfefafffefafffffcfffffefffffffdfffffbfffff8fdfefcfefffffbfffffcfffdfffff0f4
ff8081d72726a61a1ab41617bf1616c20f0fb90609a700009d0001a50103a80000a30401a40401
a40300a30300a30401a40300a30200a20300a30300a30300a30300a30300a30300a30300a30300
a30301a10301a10301a10301a10301a10301a10301a10301a10301a10301a10301a10301a10301
a10301a10301a10101a10203a70206a1080b951013861d1e797878b4f5f6fff9fbfcfffffeffff
fefdfffffbfffffbfffcfbfffefffefffffdfffffeffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffcff
fdfefffdfffdfdfefbfdfbfdfef7fefff0feffe8fdffe3ffffd6faffbcebff96d7fd68c5f240b6
ea1eade70ca7ec0da8fd0aa8ff09aaff05a9fc04a9ff06a8ff039ff90699f50f98f41f9cf12b9a
e23b98cf62a9cb9ac7dccadaebdbdde7ebf0eff4fbf6f6fffff6fefefafcfcfffffefffffcfcfb
f7fffffefffffefffffefffffefcfefefdfdfdfffdfffffefffcfefff0f3ff8180d02c2c9e2528
a82023a92223a915159710118b17189010128f0e0f8f1110901613911714921613911512901512
9016139116139115129015129015129015129015129015129015129015129015138f15138f1513
8f15138f15138f15138f15138f15138f15138f15138f15138f15138f15138f15138f15138f1312
900d1195090e92111794161a8b161674908fcdf6f6fffafcfdfffffffffffffbfffffafffffaff
fcfbfffcfffefffffdfffffeffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffcfffdfbfefcfffdfdfffd
fffffffffffffffbfefcfcfdfbfafbf9fbfdfef6fdffe5fcffc6f8ff9fe9ff6fd6fd4fc5f637b0
ee26a5ea1da9ec17abf10ca9f30aacfa0cacff09a7ff04a0ff059dfc0799f31a9eeb339fd94396
c370a3cba7c7e4bbd8e6cbe4e8e1eff5f4fafffefdfffffcfdfefcfbfdfefafffffefdfffeffff
fffffffffffff7fffff8fffffefffdfef6f5f7fafbffdddfffb9bcefbdbff9bebffcb5b3efb9b4
f1beb6f5bab3f0bcb9f0b8b9ebbabaf0bab9f1bab9f1b9b8f0b8b7efb8b7efbab9f1bcbbf3bab9
f1bab9f1bab9f1bab9f1bab9f1bab9f1bab9f1bab9f1babaf0babaf0babaf0babaf0babaf0baba
f0babaf0babaf0babaf0babaf0babaf0babaf0babaf0babaf0babaf0b8b9f1b8b8f4b8b9f5b7bb
f0b5b9e9bdbce8dfddfbfdf9fffffefffffdfffffdfffdfdfffafefffafffffbfffefffffcffff
fcfffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffbfefcfcfffdfffefefffdfdfdfcfefcfefefbff
fffbfffefafffdfbfffffafefff6fcffeefdffe6fdffdbfcffcdfaffb4eeff93dcfa6ac4ed44b1
e528abea19acf20ea8f507a5f808a8fc09a8ff09a8ff09a1f90e9aed1e9beb319ae43990d05da2
cd90bfdac4d8e9dfe2eaefeceefef9fafffffffafcfcfdfffefdfffffdfffffdfffffffff8ffff
f8fffcfbfffefefffefff7f8fcfafcfff4f7fff7fafff9f9fffaf8fffcf7fffbf4fffcf6fff9f9
fffafcfffafcfffafbfff9fafffafbfffafbfffafbfffafbfffafbfffafbfffafbfffafbfffafb
fffafbfffafbfffafbfffafbfffafafffafafffafafffafafffafafffafafffafafffafafffafa
fffafafffafafffafafffafafffafafffafafffafafff9f7fffafafff4f8fff3f7fffbfbfffdfb
fffffafcfffcfdfffdfffffdfffdfcfffbfefffbfffffdfffefffffcfffffcfffffeffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffefffdfffffefffefefffdfdfefdfffdfffffcfefef7fcfbfafffdfcff
fdfefffdfffefefffefffffefffefcfff6fcffecffffdafeffcafdffaaf0ff81dbff5fcafd44ba
f532aeee27a9ec22abf01aa8f516a8fa16a8ff12a1fc119cf3209eec339ddc4295c86a9fc49ebf
d9c4d8e9d6e0eae5ebf2f7fafefdfffffdfffffbfffffbfffffffffcfffffefffefffffefffdff
fffbfffffbfffffbfefffdfffffdfffffdfcfffdfbfffdfcfffbfdfffbfefffbfffffbfffffbfe
fffbfefffbfefffbfefffbfefffbfefffbfefffbfefffbfefffbfefffbfefffbfefffbfefffbfe
fffbfefffbfefffbfdfffbfdfffbfdfffbfdfffbfdfffbfdfffbfdfffbfdfffbfdfffbfdfffbfd
fffbfdfffbfdfffbfdfffbfefffdfefffdfefffbfefffbfefffbfdfffdfefffffffcfffffbfffe
fffffdfffdfefffdfffffffffffffffffffdfffffdffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffefffffcfffffefffffefffffffffffffffffffffffffffffefffffcfffffefffffffffe
fffffefffffdfffdfdfff8fdfff3ffffecffffe4ffffdcffffd2fdffc1f3ffaee8ff8bd1f970c4
f451b5eb3aaceb29abf11eabf615a9f514a8f416a5f01c9fe92fa1e83996d35a9aca94bbdbc4d4
e5dde0e8e5e7e8f3f6f4fbfffef9fffafffffffffffffdfefffdfefffbfffffbfffefdfffffdff
fffdfffbfdfffcfdfefffdfdfffdfefffdfffffdfffffdfffefdfffefdfffefdfffefdfffefdff
fefdfffefdfffefdfffefdfffefdfffefdfffefdfffefdfffefdfffefdfffefdfffffdfffffdff
fffdfffffdfffffdfffffdfffffdfffffdfffffdfffffdfffffdfffffdfffffdfffffdfffffdff
fffdfffffffffefffffefffffffdfffffdfefffdfffffdfffbfdfffbfdfffffdfefffdffffffff
fffffffefffffffffefffffdfffffeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffeffff
fefffffefffffffffffffffffffffffffffffefffffefffffffffffffffefffffefffffefffffd
fffffefffffffffcfffdf7fefbf8fefdf8fffff2fcffe5f8ffddfcffcdfaffb8f3ff9ae5ff79d4
ff5bc6f941bbef34b5ee2babec2dacf12ca8ef32a1e548a2dd579bca709fbe9cbfd3c7e1efcddf
e6deeaeceef6f5fbfffffbfffffbfffffbfffffdfffffdfffffbfefffbfefffbfffefbfffefdff
fffdfefffffdfffffefffffefffffeffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fefffffffffffffffefffffefffdfffcfdfffcfdfffffdfffffffffefffffcfffffefffffeffff
fffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffefffffefffffffffffffffffffefdff
fefdfffffffffffffefffffefffffefffffefffffefffffffffffffefffffefffcfdfffffefdff
fcfafffbfefffbfffffefffffffafdfff1fdffecfdffeafbffe6fcffe0feffd4feffbdf5ffaaea
ff9bdffc85cff171c3ec5fbae74dade247abe145abdc43a1cc509abc98cce3cce6f4e7f1fbfbfe
fffbfffffdfffefffffefffffffffefffdfefffbfefffbfffffbfffffbfffffdfffffffefffffe
fffffefffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffefffffffffffefffffffffffeffffffffff
fefffffffffffefffffffffffefffffffffffefffffffffffefffffffffffffffffffffefffffd
fffffdfffffffffdfffefdfffffffffffffffcfffffcfffffefffffefdfffefdfffeffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffdfffffdfffffdfffffdfffffdfffefdfffefdfffffdfffffffe
fffffefffffdfffffefffffffffffffefffffcfffffcfffcfdfffdfffdfffefdfffcfffffcfffe
fafffefafffdf9fdfdfdfcfefefffdfdfffdfdfefffdfaffffefffffe7ffffe1fcffddffffcefc
ffbbf6ff9de9ff87dfff77d8ff71cdf673c0e17db6d093b4c8b9d0e0fffefffffefffffeffffff
fefffffefffffcfffffefffffffdfefffbfefffbfffffdfffffffffffffffffffffefffffeffff
fffffefffffefffffefffffefffffefffffefffffefffffefffffefffffefffffefffffefffffe
fffffefffffefffffefffffffffffefffffffffffefffffffffffefffffffffffefffffffffffe
fffffffffffefffffffffffefffffffffffffefffffefffefffffdfffffbfffffcfffffeffffff
fffffffffffffefffffcfffffcfffffffffffffbfffcfbfffcfdfffeffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffdfffffbfffffafffffbfffffdfffffdfffffdfffffffffffffffffffefffffefffffefffffe
fffffffffffffefffffcfffffefffcfffffbfffffcfffefdfffcfffdfcfffdfdfffffffffefeff
fdfffffcfffffcfcfffdf7fafef6f9fdf8fcfdfafffff5fcfff6ffffeef8ffebfbffe3ffffdcfe
ffddfdffdfffffdefbffd0f1ffb0d6e8add7eafffffefffefffffefffffefffffffefffffcffff
fcfffffefffefffffefffdfffefdfffefffffffffffffffffefffffefffffffffefffffefffffe
fffffefffffefffffefffffefffffefffffefffffefffffefffffefffffefffffefffffefffffe
fffffefffffefffffefffffefffffefffffefffffefffffefffffefffffefffffefffffefffffe
fffffefffffffffffffefffffefffefffffdfffffbfffffdfffffffffffffeffffffffffffffff
fefffffefffffffffffffbfffefbfffefdffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdfffffbff
fffbfffffdfffffdfffffdfffffffffffffffffffefffffefffffefffffeffffffffffffffffff
fefffffffffcfffffcfffffcfffefdfffcfefefbfffefbfffffdfffffffffcfcfdf9fbfcf8fcff
fdfbfefffdfefffffefefffefdfffdfdfffefefffcfdfffdfcf7faf8f8fdfbfffffef8f8f8f8fd
ffebfbffcfecfac3eaf8fffff9fffffcfdfefffbfefffbfffffdfffefffffffffffffffefffffe
fffffffbfffffcfffefffdfefffdfffffdfffffffffffdfffffffffffdfffffffffffdffffffff
fffdfffffffffffdfffffffffffdfffffffffffdfffffffffffdfffffffffffdfffffffffffdff
fffffffffdfffffffffffdfffffffffffdfffffffffffdfffffffffffdffffffffffffffffffff
fefffffffffefffffefffffefffdfffffdfffbfdfffbfdfffffffefffffffffffffffffefffffe
fffdfffffdffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffffffffffffffffffffefffffefffffffffdfffffdff
fffdfffffffffffffffffffffffffffffdfffffdfffffdfffffdfffffffffffdfffffafffefbff
fffffefffffffffefefefcfffdf9fefcfafdfbfefffdfffffefffffefefffdfdfdfdfcfcfcfffd
fdfffefefffffffcfefef7fcfbf9fffefdfffffefefefffefefffefefdfefff9fdfff3fefff3ff
fffffff7fffffbfbfefffafdfff8fffffafffffffefffffefffffefffffffefffff9fffffbfffe
fffdfdfffdfefffdfffffdfffffdfffffdfffffdfffffdfffffdfffffdfffffdfffffdfffffdff
fffdfffffdfffffdfffffdfffffdfffffdfffffdfffffdfffffdfffffdfffffdfffffdfffffdff
fffdfffffdfffffdfffffdfffffdfffffdfffffdfffffdfffffdfffffffffefffffffffefffffe
fffdfffffdfffcfbfff8fbfff9fdfffffdfefffffefffffffffffefffffefffdfefffdfffffffe
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
fffffffffffffffffffffffffffffffffffefffffefffffffffffffffdfffffdffffffffffffff
fffffffffffffffdfffffbfffffbfffffbfffffdfffffbfffef9fffdfafffcfdfffffdfdfdfdfd
fdfcfffdfdfffefafffbfdfefcfffffefffffffffefdfdfefcfffffefffefefefbfdfefefefbff
fff8fffff7fffffcfefefffdfdfffbfcfefcfcfffcfffefdfffffefffcfcfc030000000000
}\cf3\fs52 
\par Plagiarism Checker X Originality Report\cf1\b\fs26 
\par Similarity Found: 17%\b0\fs24 
\par 
\par Date: Thursday, November 09, 2017
\par Statistics: 1148 words Plagiarized / 6935 Total words
\par Remarks: Low Plagiarism Detected - Your Document needs Optional Improvement.
\par -------------------------------------------------------------------------------------------
\par \pard 
\par Achieving Secure, Universal, & \highlight4 Fine-Grained Query Results Verification for Secure Search Scheme over Encrypted Cloud Data\highlight2  1. INTRODUCTION Distributed processing \highlight4 is a model for\highlight2  allow universal, helpful, on-request organize \highlight4 access to a\highlight2  mutual \highlight4 pool of configurable\highlight2  registering possessions (e.g., 
\par 
\par systems, \highlight4 servers, stockpiling, applications,\highlight2  & \highlight4 administrations) that can be\highlight2  quickly provisioned & discharged with negligible administration exertion or specialist organization collaboration. Driven by the bounteous advantages brought by the distributed computing, for example, cost sparing, fast organization, adaptable asset setup, & so on., 
\par 
\par an ever improving no. of ventures & individual clients are considering moving their private information & local applications \highlight4 to the cloud\highlight2  server. \highlight4 A matter of\highlight2  open concern is the manner by which \highlight4 to ensure the security of\highlight2  information that is outsourced to a remote cloud server & splits far from the immediate control of information proprietors. Encryption on private information before outsourcing is a compelling measure \highlight4 to ensure information\highlight2  secrecy. 
\par 
\par Be that as it may, encoded information make \highlight4 compelling information recovery\highlight2  an exceptionally difficult assignment; to address the test (i.e., look on encoded information), Song et al. to start with \highlight4 presented the idea of\highlight2  accessible encryption & proposed a \highlight4 down to earth\highlight2  strategy that enables clients to seek \highlight4 over scrambled information\highlight2  through encoded question catchphrases. 
\par 
\par Afterward, numerous accessible encryption plans were \highlight4 proposed in light of\highlight2  symmetric key & open key setting to fortify security & enhance question proficiency. As of late, with the developing notoriety of distributed computing, \highlight4 how to safely\highlight2  & effectively seek \highlight4 over encoded cloud\highlight2  information turns into an examination center. Some methodologies \highlight4 have been proposed in light of\highlight2  customary accessible encryption plans, which expect \highlight4 to ensure information\highlight2  security & question protective measures with better inquiry effective for distributed computing. 
\par 
\par In any case, these plans depend on a perfect presumption that \highlight4 the cloud server\highlight2  is a "legitimate however inquisitive" element & keeps hearty & secure programming/equipment conditions. Therefore, right & finish question comes about dependably are unexceptionally come back from \highlight4 the cloud server\highlight2  when an inquiry closes without fail. Be that as it may, in \highlight4 down to earth\highlight2  applications, \highlight4 the cloud server\highlight2  may return wrong or fragmented question comes about once he acts insincerely for illicit benefits, for example, sparing calculation & correspondence cost or because of conceivable programming/equipment disappointment of the server. 
\par 
\par Subsequently, the above actuality ordinarily propels information clients to \highlight4 check the accuracy\highlight2  & fulfillment of question comes about. A few analysts proposed to incorporate the question comes about confirmation components to their safe inquiry plans, (e.g., implanting check data into the predetermined secure records or question comes about). 
\par 
\par After accepting inquiry comes about, information clients utilize determined confirmation data to check their correctess & culmination. \highlight4 There are two\highlight2  constraints in these plans: 1) These confirmation instruments give a coarsegrained check, i.e., \highlight4 if the question\highlight2  \highlight4 result set contains\highlight2  all qualified & right information records, \highlight4 at that point\highlight2  these plans answer yes, generally answer no. 
\par 
\par Consequently, if the check calculation yields no, an information client needs to prematurely end the unscrambling for all question comes about regardless of just a single inquiry result is off base. 2) These check components are \highlight4 for the most part\highlight2  firmly coupled to comparing secure inquiry developments & have not all inclusiveness. In an inquiry procedure, for a returned question comes about set that contains various encoded information documents, an information client may wish to confirm the rightness of each scrambled information record (along these lines, he can evacuate erroneous outcomes & hold the right ones as the ultima question results) or needs to check what number of or which qualified information records are not returned on earth if \highlight4 the cloud server\highlight2  purposefully overlooks some question comes about. 
\par 
\par These \highlight4 data can be\highlight2  viewed as a hard confirmation to rebuff the cloud server. This is \highlight4 trying to accomplish\highlight2  the fine-grained confirmations \highlight4 since the question\highlight2  & check are authorized in the scrambled condition. We proposed a safe & fine-grained question comes about check conspire by building the confirmation protest for encoded outsourced information documents. 
\par 
\par At the point when a question closes, the inquiry comes about set alongside the relating check protest are returned together, by which the inquiry client can precisely confirm: 1) the rightness of each scrambled information document in the outcomes set; 2) what number of qualified information records are not returned & 3) which qualified information \highlight4 documents are not\highlight2  returned. 
\par 
\par Besides, our proposed confirmation conspire is lightweight & free coupling to concrete secure inquiry plots & can be effectively prepared into any protected question conspire for distributed computing. \highlight4 In any case,\highlight2  \highlight4 some essential augmentations\highlight2  & imperative works should be additionally provided to culminate our unique plan, for example, itemized execution assessment & formal security definition & verification. 
\par 
\par All the more essentially, in the unscrupulous cloud condition, the plan experiences the accompanying two imperative security issues: 1) Just as conceivably altering or erasing question comes about, the untrustworthy cloud server may likewise alter or manufacture confirmation objects themselves to make the information client difficult to perform check operation. 
\par 
\par Uncommonly, once \highlight4 the cloud server\highlight2  realizes that the inquiry comes about check conspire is given in the safe pursuit framework, he may return inveracious confirmation protest escape obligations of rowdiness. 2) When an information client \highlight4 needs to get\highlight2  the coveted confirmation protest, some imperative data will be uncovered, for example, which check objects are being or \highlight4 have been asked\highlight2  for before much of the time, & so forth. This data may spill question client's protection & uncover some helpful substance about information records. 
\par 
\par All the more significantly, this uncovered data may progress toward becoming allurements of trouble making for the cloud server. 1.1 Objective of the Project Secure search strategies \highlight4 over scrambled cloud information\highlight2  enable an approved client to inquiry information documents of enthusiasm by submitting encoded question catchphrases \highlight4 to the cloud server in a\highlight2  protection saving way. 
\par 
\par Notwithstanding, practically speaking, the returned question results \highlight4 might be wrong\highlight2  or deficient in the untrustworthy cloud condition. \highlight4 For instance, the cloud server\highlight2  may purposefully discard some qualified outcomes to spare computational assets & correspondence overhead. In this manner, a well-working secure question framework \highlight4 ought to give\highlight2  an inquiry comes about confirmation instrument that enables the information client to check comes about. 
\par 
\par In \highlight4 this paper, we\highlight2  plan a safe, effectively incorporated, & fine-grained question comes about confirmation system, by which, given a scrambled inquiry comes about set, the inquiry client not exclusively can check the rightness of every datum document in the set yet additionally can additionally check what number of or which qualified information records are not returned if the set is deficient before decoding. 
\par 
\par The confirmation plot is free coupling to concrete secure hunt methods & can be effectively incorporated into any safe question conspire. We accomplish the objective by building secure confirmation protest for encoded cloud information. Besides, a short mark procedure with amazingly little stockpiling cost is proposed \highlight4 to ensure the\highlight2  validness of confirmation question & a check protest ask for system is exhibited to enable the inquiry client to safely get the coveted confirmation question. 
\par 
\par Execution assessment demonstrates that the proposed plans are functional & effective. 2. LITERATURE SURVEY Security Challenges for the Public Cloud In this discussion, we will initially talk about various squeezing security challenges \highlight4 in Cloud Computing,\highlight2  including information benefit outsourcing security & secure calculation outsourcing. 
\par 
\par At that point, we will concentrate on information stockpiling \highlight4 security in Cloud\highlight2  Computing. As \highlight4 one of the\highlight2  primitive administrations, distributed storage enables \highlight4 information proprietors to outsource their\highlight2  information to cloud for its engaging advantages. Nonetheless, the way that proprietors \highlight4 never again have\highlight2  physical ownership of the outsourced information raises huge security worries on the capacity accuracy. 
\par 
\par Thus, empowering secure capacity examining \highlight4 in the cloud\highlight2  condition with new methodologies winds up noticeably basic & testing In this discussion, we will introduce our current research endeavors towards capacity outsourcing \highlight4 security in distributed computing\highlight2  & depict both our specialized methodologies & security & execution assessments. 
\par 
\par Pragmatic \highlight4 Techniques for Searches on Encrypted Data\highlight2  It is attractive to store information on information stockpiling servers, for example, mail servers & document servers in scrambled shape to decrease security & protection dangers. Yet, this more often than not infers that one needs to give up usefulness for security. For instance, if a customer wishes to recover just reports containing certain words, it was not already known how \highlight4 to let the\highlight2  information stockpiling server play out the pursuit & answers the inquiry without loss of information secrecy. 
\par 
\par In \highlight4 this paper, we\highlight2  depict our cryptographic plans for \highlight4 the issue of looking on encoded information\highlight2  & give evidences of security to the subsequent crypto frameworks. Our procedures have various significant favorable circumstances. They \highlight4 are provably secure: they give provable mystery\highlight2  to encryption, as in \highlight4 the untrusted server can't\highlight2  get the hang of anything \highlight4 about the plaintext when just given\highlight2  the ciphertext; they give inquiry detachment to looks, implying \highlight4 that the untrusted server can't\highlight2  pick up much else \highlight4 about the plaintext\highlight2  than the query item; they give controlled seeking, \highlight4 so that the untrusted server can't\highlight2  \highlight4 scan for a\highlight2  discretionary word without the client's approval; they likewise bolster concealed questions, so \highlight4 the client may approach the untrusted server to\highlight2  look \highlight4 for a mystery word without uncovering the word to the\highlight2  server. 
\par 
\par We have depicted new procedures for remote looking on scrambled information utilizing an untrusted server & gave evidences of security to the subsequent crypto frameworks. Our systems have various critical focal points: they are provably secure; they bolster controlled & concealed inquiry & question segregation; they are straightforward & quick (More particularly, for a report of length , the encryption & pursuit calculations just need O(n) stream figure & square figure operations); & they present no space & correspondence overhead. Our plan is likewise extremely adaptable, & it can without much of a stretch be reached out to help further developed hunt questions. 
\par 
\par We presume this gives an effective new building hinder for \highlight4 the development of\highlight2  secure administrations in the untrusted foundation. \highlight4 Open Key Encryption with keyword Search\highlight2  We consider \highlight4 the issue of looking on data that is\highlight2  encoded using an open key structure. \highlight4 Consider customer Bob who sends email to customer Alice encoded under Alice's open key.\highlight2  
\par 
\par An \highlight4 email entryway needs to test whether the email contains the watchword\highlight2  "basic" with the objective \highlight4 that it could course the email\highlight2  in like way. Alice, of course does not wish \highlight4 to give the\highlight2  entry \highlight4 the ability to\highlight2  decipher each one of her messages. We describe & manufacture a framework that enables Alice to give a key to the entryway that engages the gateway \highlight4 to test whether\highlight2  "sincere" is a watchword in the email without getting the hang of whatever else about the email. We insinuate this segment as \highlight4 Public Key Encryption with\highlight2  catchphrase Search. 
\par 
\par As another representation, consider a mail server that stores diverse messages straightforwardly encoded for Alice by others. Using our segment \highlight4 Alice can send the mail server a key\highlight2  that will engage the server to perceive all messages containing some specific catchphrase, yet get the hang of \highlight4 nothing else. We\highlight2  describe \highlight4 open key encryption with watchword\highlight2  request & give a couple of improvements. 
\par 
\par We described \highlight4 the possibility of\highlight2  an \highlight4 open key encryption with\highlight2  catchphrase look (PEKS) & gave two advancements. Building up \highlight4 a PEKS is related to Identity Based Encryption (IBE),\highlight2  however PEKS is from every angle harder to assemble. \highlight4 We showed that\highlight2  PEKS recommends Identity Based Encryption, however the inverse is starting at now an open issue. Our improvements for PEKS rely upon late IBE advancements. 
\par 
\par We can demonstrate security by misusing additional properties of these plans. Accessible \highlight4 Symmetric Encryption: Improved\highlight2  Definitions & Efficient Constructions Accessible \highlight4 symmetric encryption (SSE)\highlight2  enables a gathering \highlight4 to outsource the\highlight2  capacity of his information to another gathering \highlight4 in a private\highlight2  way, while keeping up \highlight4 the capacity to\highlight2  specifically look over it. 
\par 
\par This issue \highlight4 has been the\highlight2  concentration of dynamic research & a few security definitions & developments \highlight4 have been proposed.\highlight2  \highlight4 In this paper we\highlight2  start by looking into existing thoughts of security & propose new & more grounded security definitions. We \highlight4 at that point\highlight2  display two developments that we indicate secure under our new definitions. 
\par 
\par Strikingly, notwithstanding fulfilling more grounded security ensures, our developments are more productive than every single past development. Further, earlier work on SSE just considered the setting where just the proprietor of the information is equipped for submitting look inquiries. We consider the regular expansion where a discretionary gathering of gatherings \highlight4 other than the\highlight2  proprietor can submit look questions. 
\par 
\par We formally characterize SSE in this multi-client setting, & present an effective development. In this article, we have returned to \highlight4 the issue of\highlight2  accessible symmetric encryption, which enables \highlight4 a customer to store\highlight2  its information \highlight4 on a remote server\highlight2  such that it can look over \highlight4 it in a private\highlight2  way. We make a few commitments including new security definitions & new developments. 
\par 
\par Propelled by inconspicuous issues in all past security definitions for SSE, we propose new definitions & call attention to that the current ideas have huge \highlight4 down to earth\highlight2  disadvantages: \highlight4 in spite of the\highlight2  characteristic utilization of accessible encryption, they just assurance security for clients that play out all their pursuits \highlight4 without a moment's\highlight2  delay. 
\par 
\par We address this impediment by presenting more grounded definitions that certification security notwithstanding when clients perform more practical ventures. We likewise propose two new SSE developments. Shockingly, \highlight4 in spite of\highlight2  being provably secure under our more grounded security definitions, these are \highlight4 the most effective\highlight2  plans to date & are (asymptotically) ideal (i.e., the work performed by the server per returned record is steady in the span of the information). 
\par 
\par At last, we additionally consider multi-client SSE, which stretches out the looking capacity to parties \highlight4 other than the\highlight2  proprietor. Deterministic & \highlight4 Efficiently Searchable Encryption\highlight2  We present as-solid as-conceivable meanings of security, & developments accomplishing them, for \highlight4 open key encryption\highlight2  plans where the encryption calculation is deterministic. We get as an outcome database encryption techniques that allow quick (i.e. 
\par 
\par sub-straight, & in actuality logarithmic, time) look while provably giving protection that is as solid as conceivable subject to this quick pursuit imperative. One of our builds, called RSA-DOAEP, has the additional element of being length safeguarding, \highlight4 with the goal that it is\highlight2  the primary case of an open key figure. We sum up this to acquire an idea of productively accessible encryption plans which allow more adaptable protection to seek time exchange offs \highlight4 by means of\highlight2  a method called bucketization. Our outcomes answer muchasked inquiries in the database group & give establishments to work done there. 
\par 
\par Open \highlight4 Key Encryption with Fuzzy Keyword Search: A Provably Secure Scheme under Keyword Guessing Attack\highlight2  A considerable measure of intrigue has been drawn as of late into \highlight4 open key encryption with\highlight2  catchphrase seek (PEKS), which keeps publickey scrambled archives amendable to secure watchword look. \highlight4 In any case,\highlight2  PEKS oppose against watchword speculating assault by accepting that the extent of the catchphrase space is past the polynomial level. 
\par 
\par Be that as it may, this suspicion is incapable practically speaking. PEKS are unreliable under watchword speculating assault. As we watch, \highlight4 the way to\highlight2  shield such assault is to maintain a strategic distance from the accessibility of the correct hunt trapdoor to foes. In like manner, we trade off the precision of inquiry trapdoor by mapping no less than two distinct catchphrases into a fluffy hunt trapdoor. 
\par 
\par We propose a novel idea called \highlight4 open key encryption with\highlight2  fluffy watchword look (PEFKS), by which the un-trusted server just gets the fluffy hunt trapdoor rather than the correct pursuit trapdoor, & characterize its semantic security under picked catchphrase assault (SS-CKA) & lack of definition of catchphrases under non-adaptively picked watchwords & watchword speculating assault (IK-NCK-KGA). 
\par 
\par For the watchword space with & without uniform circulation, we individually show two general changes from mysterious \highlight4 character based encryption\highlight2  to PEFKS, & demonstrate their SSCKA & IK-NCK-KGA securities. \highlight4 As far as anyone\highlight2  is concerned, PEFKS is the main plan to oppose against catchphrase speculating assault on condition that the watchword space isn't more than the polynomial level. In PEKS, an intermediary server, who reacts the catchphrase questions of a collector, can know the substance of watchwords by actualizing KGA. 
\par 
\par In addition, it is effective under the \highlight4 down to earth\highlight2  condition that the measure of the watchword space isn't more than the polynomial level. \highlight4 So as to\highlight2  oppose against KGA, we novelly characterized \highlight4 open key encryption with\highlight2  fluffy catchphrase look (PEFKS) & its IK-NCK-KGA security. Also, we proposed two all inclusive changes from IBE to PEFKS under various conditions. 
\par 
\par Under the condition that the watchword space has uniform dissemination, we proposed a SS-CKA & IK-NCK-KGA secure change PEFKS-UD, & gave an occurrence \highlight4 in light of\highlight2  BF01 conspire. Under the condition that the catchphrase space has non-uniform conveyance, we proposed another SS-CKA & IK-NCK-KGA secure change PEFKS-ND, & gave two strategies to sort watchwords, which \highlight4 is the way to\highlight2  acknowledge PEFKS-ND. 
\par 
\par Past the viewpoint of cryptosystem, we talked about the one-sided favorable position of KGA on PEFKSND, which is caused just by the non-uniform dissemination of the watchword space. We enlighten that the one-sided advantage has been diminished however much as could be expected. So we influenced PEFKS-ND to secure in an expansive sense. 
\par 
\par Parallel & \highlight4 Dynamic Searchable Symmetric Encryption\highlight2  Accessible \highlight4 symmetric encryption (SSE)\highlight2  empowers \highlight4 a customer to\highlight2  outsource a gathering of scrambled archives \highlight4 in the cloud\highlight2  & hold \highlight4 the capacity to\highlight2  perform catchphrase seeks without uncovering data about the substance of the reports & inquiries. Albeit effective SSE developments are known, past arrangements are exceptionally successive. 
\par 
\par This is fundamentally because of the way that, as of now, the main strategy for accomplishing sub-direct time look is the reversed file approach which requires the hunt calculation \highlight4 to get to\highlight2  a grouping of memory areas, each of which is unusual & put away at the past area in the arrangement. Propelled by progresses in multi-center models, we display another strategy for developing sub-straight SSE plans. 
\par 
\par Our approach is exceptionally parallelizable & dynamic. With about a logarithmic number of centers set up, scans for a catchphrase w in our plan execute in o(r) parallel time, where r is the quantity of archives containing watchword w (with more centers, this bound can go down to O(log n), i.e., autonomous of the outcome measure r). 
\par 
\par Such time unpredictability outflanks the ideal T(r) consecutive hunt time\emdash a comparative headed holds for the updates. Our plan likewise accomplishes the accompanying critical properties: (an) it appreciates a solid idea of security, to be specific security against versatile picked catchphrase assaults; (b) contrasted with existing sub-straight unique SSE plans, refreshes in our plan don't release any data, aside from data \highlight4 that can be\highlight2  gathered from past pursuit \highlight4 tokens; (c) it can be\highlight2  actualized effectively in outside \highlight4 memory (with logarithmic I/O overhead).\highlight2  
\par 
\par Our strategy is straightforward & utilizes a red-dark tree information structure; its security is demonstrated in the irregular prophet show. \highlight4 Dynamic Searchable Encryption\highlight2  \highlight4 by means of\highlight2  Blind Storage \highlight4 Dynamic Searchable Symmetric Encryption\highlight2  enables \highlight4 a customer to store a dynamic accumulation of scrambled\highlight2  reports with a server, & later rapidly do watchword looks on these encoded archives, while uncovering insignificant data to the server. 
\par 
\par In \highlight4 this paper we\highlight2  exhibit another dynamic SSE plot that is less difficult & more effective than existing plans while uncovering less data \highlight4 to the server\highlight2  than earlier procedure, accomplishing entirely versatile protection against legitimate yet probing servers. We actualized a model of our preparation & showed its proficiency on datasets from earlier work. 
\par 
\par Aside from its solid effectiveness, our plan is additionally less complex: specifically, it doesn't require the server to help any operation other than transfer & download of information. In this manner the server in our plan can be construct exclusively \highlight4 with respect to a\highlight2  distributed storage benefit, instead of a cloud calculation benefit too, as in earlier work. 
\par 
\par In \highlight4 building our dynamic SSE\highlight2  conspire, \highlight4 we present another primitive called Blind Storage, which\highlight2  enables \highlight4 a customer to store an arrangement of records on a remote server\highlight2  such that \highlight4 the server does not\highlight2  \highlight4 figure out what\highlight2  number of documents are put away, or the lengths of the individual documents; as each record is recovered, the \highlight4 server finds out\highlight2  about its reality (and can see a similar record being downloaded therefore), yet the record's name & substance are not uncovered. 
\par 
\par This is a primitive with a few \highlight4 applications other than SSE,\highlight2  & is of autonomous intrigue. \highlight4 In this work,\highlight2  we presented another cryptographic build \highlight4 called Blind Storage,\highlight2  & actualized it utilizing a novel, yet light-weight convention SCATTERSTORE. We likewise indicated how a \highlight4 dynamic SSE plan\highlight2  can be built utilizing Blind Storage, in a moderately straightforward way. 
\par 
\par The subsequent plan \highlight4 is all the more\highlight2  computationally effective, require less difficult foundation, & is more secure than the current plans. \highlight4 Secure Ranked Keyword Search over Encrypted Cloud Data\highlight2  As distributed processing ends up noticeably common, delicate data are as a rule progressively concentrated \highlight4 into the cloud.\highlight2  
\par 
\par For \highlight4 the assurance of\highlight2  information security, \highlight4 touchy information must be encoded before\highlight2  outsourcing, which makes powerful information use an exceptionally difficult errand. Albeit customary accessible encryption plans enable clients to \highlight4 safely look over\highlight2  encoded information through catchphrases, these systems bolster just boolean inquiry, without catching any \highlight4 importance of information\highlight2  records. 
\par 
\par This approach experiences two fundamental disadvantages when specifically connected with regards to Cloud Computing. From one viewpoint, clients, who don't really have pre-information of the encoded cloud information, need to postprocess each recovered record \highlight4 keeping in mind the\highlight2  end goal to discover ones most coordinating their enthusiasm; \highlight4 On the other hand,\highlight2  perpetually recovering all documents containing the questioned watchword additionally acquires superfluous system movement, which is completely unwanted \highlight4 in the present\highlight2  pay-as-you-utilize cloud worldview. 
\par 
\par In this paper, \highlight4 out of the blue\highlight2  we characterize & tackle \highlight4 the issue of\highlight2  powerful yet secure positioned catchphrase seek \highlight4 over scrambled cloud\highlight2  information. Positioned look enormously improves framework convenience by restoring the coordinating records in a positioned arrange \highlight4 with respect to\highlight2  certain importance criteria (e.g., 
\par 
\par watchword recurrence), in this way making one bit nearer towards handy organization of security safeguarding information facilitating administrations in Cloud Computing. We initially give a clear yet perfect development of positioned catchphrase seek under the best in class accessible \highlight4 symmetric encryption (SSE)\highlight2  security definition, & exhibit its wastefulness. 
\par 
\par To accomplish more \highlight4 down to earth\highlight2  execution, we \highlight4 at that point\highlight2  propose a definition for positioned accessible symmetric encryption, & give a proficient plan by appropriately using the current cryptographic primitive, arrange saving symmetric encryption (OPSE). Intensive \highlight4 examination demonstrates that\highlight2  our proposed arrangement appreciates "as-solid as could reasonably be expected" security ensure contrasted with past SSE plans, while effectively understanding the objective of positioned catchphrase look. Broad trial comes about exhibit the effectiveness \highlight4 of the proposed\highlight2  arrangement. 
\par 
\par In this paper, as an underlying endeavor, we persuade & tackle \highlight4 the issue of\highlight2  supporting proficient positioned catchphrase scan for accomplishing powerful use of remotely put away encoded information in Cloud Computing. We initially give an essential plan & demonstrate that by following the same existing accessible encryption system, it is extremely wasteful to accomplish positioned look. 
\par 
\par We \highlight4 at that point\highlight2  suitably debilitate the security ensure, fall back on the recently generated crypto primitive OPSE, & infer a productive one-to-many request protecting mapping capacity, which permits the compelling RSSE to be planned. Through exhaustive security investigation, we demonstrate that our proposed arrangement is secure & protection safeguarding, while effectively understanding the objective of positioned watchword seek. 
\par 
\par Security \highlight4 Preserving Multi-Keyword Ranked Search\highlight2  with Anonymous ID Assignment \highlight4 over Encrypted Cloud Data\highlight2  The progress in disseminated processing has propelled the data proprietors \highlight4 to outsource their data\highlight2  organization systems from adjacent districts to business open cloud for phenomenal flexibility and monetary hold reserves. However, individuals can appreciate \highlight4 full advantage of distributed computing\highlight2  in the event \highlight4 that we can\highlight2  address genuine protection & security worries that accompany putting away touchy individual data. 
\par 
\par For genuine security, client character ought to stay escaped CSP (Cloud specialist organization) & to ensure protection of information, information which is touchy is to \highlight4 be scrambled before\highlight2  outsourcing. In this way, \highlight4 empowering a scrambled cloud information\highlight2  seek benefit is of extraordinary significance. \highlight4 By considering the substantial number of\highlight2  information clients, reports \highlight4 in the cloud,\highlight2  it is imperative for the inquiry administration to permit multikeyword question & give result closeness \highlight4 positioning to meet the compelling\highlight2  need of information recovery seek & not regularly separate the indexed lists. 
\par 
\par In this framework, we characterize & tackle the testing issue of protection safeguarding multikeyword positioned \highlight4 look over scrambled cloud information\highlight2  (MRSE), & set up \highlight4 an arrangement of\highlight2  strict protection necessities for such a safe cloud information usage framework \highlight4 to be executed\highlight2  in genuine. We initially propose \highlight4 a fundamental thought for the\highlight2  Multi-catchphrase \highlight4 Ranked Search over Encrypted cloud\highlight2  information (MRSE) in view of secure internal item calculation & proficient closeness measure of organize coordinating, i.e., 
\par 
\par however many matches as would be prudent, \highlight4 keeping in mind the\highlight2  end goal to catch \highlight4 the importance of information\highlight2  archives to the hunt question, \highlight4 at that point\highlight2  we give two essentially \highlight4 enhanced MRSE plans to accomplish different stringent protection prerequisites in two diverse\highlight2  risk models. Task of mysterious ID to the client to give greater security to the information on cloud server is finished. 
\par 
\par To enhance the inquiry experience of the information seek benefit, advance augmentation \highlight4 of the two\highlight2  plans to help more hunt semantics is finished. The past work \highlight4 for the most part\highlight2  centered around giving security to the information on cloud in which utilizing multi-catchphrase positioned look was given \highlight4 over encoded cloud\highlight2  information utilizing productive \highlight4 comparability measure of\highlight2  co-ordinate coordinating. 
\par 
\par The past work likewise proposed \highlight4 a fundamental thought of\highlight2  MRSE utilizing secure internal item calculation. There was a need to give \highlight4 all the more\highlight2  genuine security which this paper presents. In this framework, stringent security is given by allocating the cloud client a special ID. 
\par 
\par This client ID is kept escaped the cloud specialist co-op & also the outsider client to shield the client's information on cloud from the CSP & the outsider client. Therefore, by concealing \highlight4 the client's personality,\highlight2  the secrecy of client's information is kept up. 3. ANALYSIS 3.1 Existing System As of late, with the developing prevalence of distributed computing, \highlight4 how to safely\highlight2  & proficiently seek \highlight4 over scrambled cloud information\highlight2  turns into an exploration center. 
\par 
\par Some methodologies \highlight4 have been proposed\highlight2  in view of customary accessible encryption plans, which mean \highlight4 to ensure information\highlight2  security & inquiry protective measures with better question effective for distributed computing. \highlight4 In any case,\highlight2  these plans depend on a perfect suspicion that \highlight4 the cloud server\highlight2  is a "fair however inquisitive" element & keeps vigorous & secure programming/equipment conditions. Thus, rectify & finish inquiry comes about dependably are unexceptionally come back from \highlight4 the cloud server\highlight2  when a question closes without fail. 
\par 
\par In any case, in reasonable applications, \highlight4 the cloud server\highlight2  may return mistaken or inadequate question comes about once he carries on insincerely for illicit benefits, for example, sparing calculation & correspondence cost or because of conceivable programming/equipment disappointment of the server. Disadvantages of Existing System: The check components give a coarse-grained confirmation, i.e., 
\par 
\par if the inquiry \highlight4 result set contains\highlight2  all qualified & right information records, \highlight4 at that point\highlight2  these plans answer yes, generally answer no. Hence, if the confirmation calculation yields no, an information client needs to prematurely end the decoding for all question comes about \highlight4 in spite of\highlight2  just a single inquiry result is mistaken. The check components are \highlight4 for the most part\highlight2  firmly coupled to relating secure question developments & have not all inclusiveness 3.2 
\par 
\par Proposed System We formally propose the certain protected inquiry framework show & risk demonstrate & outline a fine-grained question comes about check plot for secure watchword seek \highlight4 over scrambled cloud\highlight2  information. \highlight4 We propose a\highlight2  short mark system in view of certificateless open key cryptography \highlight4 to ensure the\highlight2  validness of the check objects themselves. 
\par 
\par We plan a novel check protest ask for system in view of Paillier Encryption, where \highlight4 the cloud server\highlight2  knows nothing about what the information client is asking for & which confirmation objects are come back to the client. Advantages of Proposed System: Our plan can check the rightness of each scrambled inquiry result or further precisely discover what number of or which qualified information records are returned by the untrustworthy cloud server SYSTEM REQUIREMENTS Hardware Requirements: Processor - Pentium \endash IV Speed - 1.1 
\par 
\par GHz RAM - \highlight4 256 MB(min) Hard Disk - 20 GB\highlight2  Software Requirements: Operating System - Windows XP/95/98/2000 Programming Language - JAVA, jdk1.6 Front End - AWT, Swing Database - MySQL 4. DESIGNING UML Diagrams: The \highlight4 Unified Modeling Language (UML)\highlight2  is provide the users software blueprint & also called as \ldblquote Diagrams\rdblquote . The UML diagrams are basically two types; Structural Diagrams Behavioral Diagrams And also, we have 4 types of relationships are there to connect the classes, & objects \highlight4 to each other in\highlight2  the UML. 
\par 
\par The following Relationships are: Association (Represented by ) Aggregation (Represented by ) Generalization (Represented by ) Dependency (Represented by ) 4.1 Class Diagram: / 4.2 Use Case Diagram: / 4.3 Sequence Diagram: / 4.4 Collaboration Diagram: / 4.5 Component Diagram: / 4.6 Deployment Diagram: / 4.7 Activity Diagram: No Yes \highlight4 Data Flow Diagram\highlight2  (DFD): \highlight4 This is not\highlight2  a UML diagram & it is the context diagram. 
\par 
\par In this Diagram we can represents our \highlight4 complete system structure\highlight2  & system work flow. 5. Download & decrypt the file 3. Upload files 2. Register & login into system 4. Search queries & verification 6. View chart 1. Run 5. IMPLEMENTATION System Architecture / 5.1 MODULES \highlight4 Data Owner Module Data User Module Cloud Server\highlight2  Module Module Description: Data Owner: Data owners encrypt their private data & upload them to cloud server for enjoying the abundant \highlight4 benefits brought by\highlight2  the cloud computing \highlight4 as well as\highlight2  guaranteeing data security. 
\par 
\par Meanwhile, the secure searchable indexes are also constructed to support effective \highlight4 keyword search over encrypted outsourced data.\highlight2  Data User: An authorized data user obtains interested data files from \highlight4 the cloud server\highlight2  by submitting query trapdoors (encrypted query keywords) \highlight4 to the cloud\highlight2  server. Cloud Server: \highlight4 Cloud server can\highlight2  performs search over secure indexes according to trapdoors & sends the query results to the data user. 5.2 
\par 
\par TECHNOLOGY To Develop this project we used technology is Java. About Java: \bullet  \highlight4 Java is a\highlight2  software engineer's dialect \bullet  Java is firm & reliable \bullet  Besides for those limitation forced by method for the web condition. Java gives the software engineer, full control In the long run, \highlight4 Java is to\highlight2  web Programming the place C was once to approach Programming. 
\par 
\par Significance of Java to the Web Java affected the web. That \highlight4 is because of\highlight2  the way that; java extends the Universe of items that may move about openly in the internet. In a system, two classes of articles are \highlight4 transmitted between the\highlight2  server & the private PC. They are inactive ability & Dynamic fiery applications. Yet, Java settles these worries & by method for doing as such, has opened \highlight4 the way to\highlight2  a novel new type of utilization called the Applet. 
\par 
\par Java Architecture Java design gives a moveable, viable, over the top performing climate for advance. Java gives convey ability through ordering \highlight4 the byte codes for the\highlight2  JVM, which is then translated on every last stage by utilizing the run-time condition. \highlight4 Java is a\highlight2  dynamic framework, prepared to stack code when required from a registering gadget in a similar room or all through the planet. 
\par 
\par Compilation of code: Whilst you compile the code, the Java compiler generates computing device code (called byte code) \highlight4 for a hypothetical machine\highlight2  named \highlight4 Java Virtual Machine (JVM).\highlight2  \highlight4 The JVM is\highlight2  meant t completed \highlight4 the byte code. The JVM is\highlight2  generated for the resolving the drawback of probability. \highlight4 The code is written\highlight2  & compiled for one system & interpreted on all machines .This computing device is known as \highlight4 Java virtual Machine (JVM).\highlight2  
\par 
\par Compiling & interpreting java source code: \'01\'15 For the period of run-time the Java interpreter tricks \highlight4 the byte code\highlight2  file into thinking that it's strolling on a Java digital desktop. Surely \highlight4 this could be\highlight2  Intel Pentium windows ninety five or solar SPARCstation strolling Solaris or Apple Macintosh walking procedure & all might obtain code from any pc \highlight4 by means of\highlight2  internet & run the Applets. Simple: Java was once \highlight4 designed to be\highlight2  effortless for the official programmer to be taught & to use with ease. 
\par 
\par If you are a skilled C++ Programmer, learning Java will oriented points of C++. \highlight4 Many of the confusing\highlight2  standards \highlight4 from C++ are\highlight2  both \highlight4 left out of Java\highlight2  friendlier method. In Java \highlight4 there is a\highlight2  small quantity of obviously outlined methods to achieve a given challenge. Object oriented Java was once now \highlight4 not designed to be\highlight2  supply-code compatible with some other language. 
\par 
\par This \highlight4 allowed the Java\highlight2  staff \highlight4 the freedom to design with a\highlight2  clean state. \highlight4 One outcome of this was a\highlight2  smooth usable, pragmatic process to objects. The thing mannequin in Java is simple & convenient to extend, while simple types, similar to integers, are stored as high-efficiency non-objects. \highlight4 Robust The multi-platform\highlight2  atmosphere \highlight4 of the web\highlight2  areas wonderful demands on software, on account that the software need to \highlight4 execute reliably in a\highlight2  form of programs. 
\par 
\par The capacity to generate powerful packages was given an excessive precedence in the design of Java? Java is exactly typed language; it assessments your code at assemble time & runtime. Java nearly eliminates the problems of reminiscence administration & deal area, which is entirely automatic. In a good-written Java program, all run-time error can & must be managed by way of your program. 5.3 Sample Code UserScreen.java package com; import javax.swing.*; import java.awt.*; import java.net.Socket; import java.io.*; import java.util.*; import java.math.BigInteger; import org.jfree.ui.RefineryUtilities; public class UserScreen extends JFrame\{ JButton b1,b2,b3,b4,b5; JPanel p1,p2; Font f1; JTextArea area; JScrollPane jsp; Login login; String user; JFileChooser chooser; ArrayList<byte[]> trapdoor = new ArrayList<byte[]>(); ArrayList<VerificationObject> vlist; long time; int keyword_size; public UserScreen(Login log,String usr)\{ super("User Screen"); login = log; user = usr; \highlight4 p1 = new JPanel();\highlight2  \highlight4 f1 = new\highlight2  Font("Monospaced",Font.BOLD,16); chooser = new JFileChooser(); \highlight4 b1 = new JButton("Upload\highlight2  File"); b1.setFont(f1); p1.add(b1); int option = chooser.showOpenDialog(UserScreen.this); if(option == JFileChooser.APPROVE_OPTION)\{ File \highlight4 file = chooser.getSelectedFile();\highlight2  upload(file); \} \} \}); \highlight4 b2 = new\highlight2  JButton("Search Query"); b2.setFont(f1); p1.add(b2); search(); \} \}); b5 = new JButton("Verification"); b5.setFont(f1); p1.add(b5); verification(); \} \}); b3 = new JButton("Keywords Vs Verification"); b3.setFont(f1); p1.add(b3); Chart chart1 = new Chart("Keywords Vs Verification Chart",time,keyword_size); chart1.pack(); RefineryUtilities.centerFrameOnScreen(chart1); chart1.setVisible(true); \} \}); b4 = new JButton("Logout"); b4.setFont(f1); p1.add(b4); setVisible(false); login.setVisible(true); \} \}); p2 \highlight4 = new JPanel();\highlight2  p2.setLayout(new BorderLayout()); \highlight4 area = new JTextArea();\highlight2  area.setFont(f1); area.setEditable(false); jsp = new JScrollPane(area); p2.add(jsp,BorderLayout.CENTER); getContentPane().add(p1,BorderLayout.NORTH); getContentPane().add(p2,BorderLayout.CENTER); PaillierEnc.KeyGeneration(); \} public void verification()\{ try\{ long start = System.currentTimeMillis(); ArrayList<String> hash \highlight4 = new ArrayList<String>();\highlight2  ArrayList<String> bloom \highlight4 = new ArrayList<String>();\highlight2  for(int i=0;i<trapdoor.size();i++)\{ BloomFilter.generateBloom(50,trapdoor.get(i)); \highlight4 StringBuilder sb = new\highlight2  StringBuilder(); for(int j=0;j<BloomFilter.input.length;j++)\{ sb.append(BloomFilter.input[j]); \} System.out.println(sb.toString()+" "+new String(AES.decrypt(trapdoor.get(i)))); bloom.add(sb.toString()); \} for(int i=0;i<bloom.size();i++)\{ BigInteger input = new BigInteger(bloom.get(i).getBytes()); hash.add(PaillierEnc.Encryption(input).toString()); \} \highlight4 StringBuilder sb = new\highlight2  StringBuilder(); for(int i=0;i<hash.size();i++)\{ for(int j=0;j<vlist.size();j++)\{ VerificationObject vo = vlist.get(j); keyword_size = keyword_size + vo.getKeyword().size(); for(int k=0;k<vo.getHash().size();k++)\{ String h = vo.getHash().get(k); if(h.equals(hash.get(i)))\{ File ff = new File(vo.getPath()); File ff1 = new File(ff.getParent()); sb.append(ff1.getName()+"/"+ff.getName()+","); \} \} \} \} System.out.println("verify "+sb.toString()); if(sb.length() > 0)\{ sb.deleteCharAt(sb.length()-1); ViewSearchResult vsr = new ViewSearchResult(); String arr1[] = sb.toString().trim().split(","); for(int i=0;i<arr1.length;i++)\{ String row[] = \{arr1[i]\}; vsr.dtm.addRow(row); \} vsr.setVisible(true); vsr.setSize(600,400); vsr.setTitle("Files obtains from verification object for same query"); \}else\{ JOptionPane.showMessageDialog(this,"No record found"); \} long end = System.currentTimeMillis(); time = end - start; \}catch(Exception e)\{ e.printStackTrace(); \} \} public void upload(File file)\{ try\{ \highlight4 FileInputStream fin = new\highlight2  FileInputStream(file); byte file_data[] = new byte[fin.available()]; fin.read(file_data,0,file_data.length); fin.close(); byte enc[] = AES.encrypt(file_data); String keywords = new String(file_data); String arr[] = keywords.trim().toLowerCase().split("\\\\s+"); ArrayList<byte[]> encrypted_keywords = new ArrayList<byte[]>(); ArrayList<String> bloom \highlight4 = new ArrayList<String>();\highlight2  ArrayList<String> hash \highlight4 = new ArrayList<String>();\highlight2  ArrayList<String> dup \highlight4 = new ArrayList<String>();\highlight2  for(int i=0;i<arr.length;i++)\{ if(!dup.contains(arr[i]))\{ dup.add(arr[i]); byte data[] = AES.encrypt(arr[i].getBytes()); encrypted_keywords.add(data); \} \} for(int i=0;i<encrypted_keywords.size();i++)\{ BloomFilter.generateBloom(50,encrypted_keywords.get(i)); \highlight4 StringBuilder sb = new\highlight2  StringBuilder(); for(int j=0;j<BloomFilter.input.length;j++)\{ sb.append(BloomFilter.input[j]); \} System.out.println(sb.toString()+" "+new String(AES.decrypt(encrypted_keywords.get(i)))); bloom.add(sb.toString()); \} for(int i=0;i<bloom.size();i++)\{ BigInteger input = new BigInteger(bloom.get(i).getBytes()); hash.add(PaillierEnc.Encryption(input).toString()); \} \highlight4 Socket socket = new\highlight2  Socket("localhost",3333); ObjectOutputStream \highlight4 out = new\highlight2  ObjectOutputStream(socket.getOutputStream()); \highlight4 ObjectInputStream in = new ObjectInputStream(socket.getInputStream());\highlight2  Object req[]=\{"upload",user,file.getName(),enc,encrypted_keywords,bloom,hash\}; out.writeObject(req); out.flush(); Object res[]=(Object[])in.readObject(); String response = (String)res[0]; area.append(response+"\\n"); out.close(); in.close(); socket.close(); \}catch(Exception e)\{ e.printStackTrace(); \} \} public void search()\{ try\{ String input = JOptionPane.showInputDialog(this,"Enter input query"); if(input != null)\{ input = input.trim().toLowerCase(); String arr[] = input.split("\\\\s+"); trapdoor.clear(); for(int i=0;i<arr.length;i++)\{ byte enc[] = AES.encrypt(arr[i].trim().getBytes()); trapdoor.add(enc); area.append("Query = "+arr[i]+" Encrypted trapdoor = "+new String(enc)+"\\n"); \} \highlight4 Socket socket = new\highlight2  Socket("localhost",3333); ObjectOutputStream \highlight4 out = new\highlight2  ObjectOutputStream(socket.getOutputStream()); \highlight4 ObjectInputStream in = new ObjectInputStream(socket.getInputStream());\highlight2  Object req[]=\{"query",user,trapdoor\}; out.writeObject(req); out.flush(); Object res[]=(Object[])in.readObject(); String response = (String)res[0]; System.out.println("==="+response); vlist = (ArrayList<VerificationObject>)res[1]; if(!response.equals("No record found for given querys"))\{ ViewSearchResult vsr = new ViewSearchResult(); String arr1[] = response.split(","); int random = getRandom(); int size = arr1.length; if(random == 1) size = size - 1; for(int i=0;i<size;i++)\{ String row[] = \{arr1[i]\}; vsr.dtm.addRow(row); \} vsr.setVisible(true); vsr.setSize(600,400); \}else\{ JOptionPane.showMessageDialog(this,response); \} \} \}catch(Exception e)\{ e.printStackTrace(); \} \} public int getRandom()\{ \highlight4 Random r = new Random(); return\highlight2  r.nextInt(2); \} \} BloomFilter.java package com; import java.util.ArrayList; public class BloomFilter\{ static byte encrypt_data[]; static int input[] = new int[50]; static ArrayList<Integer> \highlight4 list = new\highlight2  ArrayList<Integer>(); public static void generateBloom(int key,byte enc[])\{ encrypt_data = enc; list.clear(); for(int i=0;i<encrypt_data.length;i++)\{ String \highlight4 data = new\highlight2  String(Byte.toString(encrypt_data[i])); int bloom = data.hashCode()%key; list.add(bloom); \} for(int i=0;i<50;i++)\{ if(list.contains(i)) input[i] = 1; else input[i] = 0; \} \} \} 6. 
\par 
\par TEST CASES Test Case Id \'07Test Case Name \'07Test Case Desc. \'07Test Steps \'07Test Case Status \'07Test Priority \'07 \'07 \'07 \'07 \'07Step \'07Expected \'07Actual \'07 \'07 \'07 \'0701 \'07Start Server \'07Test whether \highlight4 the cloud server\highlight2  will started or not \'07If server not started \'07Then no file will be \highlight4 stored in the cloud server\highlight2  \'07Server started \'07High \'07High \'07 \'0702 \'07Login \'07Verify the Data Owner login \'07Without register \'07data owner cannot login into the system \'07Display the data owner home page \'07High \'07High \'07 \'0703 \'07Upload file \'07Verify the either file uploaded or not \'07If data owner not upload the file \'07Then no \highlight4 search results will\highlight2  be displayed \'07Uploaded successfully & saved in cloud server \'07High \'07High \'07 \'0704 \'07Verification \'07Test whether the verification will be done or not \'07Without verification object \'07Cloud server \highlight4 cannot verify the\highlight2  file \'07Decrypt & download the file & file saved in system directory \'07High \'07High \'07 \'07 7. 
\par 
\par SCREEN SHOTS Cloud server: / Data owner/ user welcome screen: / Click on \highlight4 new user to\highlight2  register a data owner: / After successfully registering a data owner: / Registering another data owner: / Login as a data owner: / Data owner home screen: / Upload a file onto cloud: / After uploading the file on to cloud (the generated bloom filter..First for the given word get the bigrams, then generate hash for each bigram by using Paillier Encryption technique then generate some integer value for each hash code (here we are taking the array range up to 50) then generate bloom filter signature) / Cloud server after uploading the file: (the file will be saved at cloud in encrypted format by using AES algorithm) / Uploading some other file onto cloud: / After successfully uploading: / The verification object for the uploaded files \highlight4 will be generated\highlight2  & saved at server side: / Search query (enter the keywords from both files) (as per this project to reduce the resources, we can give \highlight4 the search results\highlight2  from few \highlight4 of the uploaded\highlight2  files if the client is satisfied with that then he can download that file otherwise he will keep on search until he will receive the required docs) / Then for the given query, trapdoor (hashcode) \highlight4 will be generated\highlight2  & searched from verification object for the given hashcode / Here it shows \highlight4 the results from one\highlight2  file. 
\par 
\par So if the user satisfied then he can download or else he will keep on search until he will get the desire output: / Select the required file & decrypt & download: / Verification: / Keywords Vs verification chart: (How many keywords are there in the uploaded files & how much time it has taken to verify) / The cloud server: / 8. 
\par 
\par CONCLUSION In this document, \highlight4 we propose a\highlight2  safe, effectively incorporated, & fine-grained question comes about check plot for secure inquiry \highlight4 over encoded cloud\highlight2  information. Not the same as past works, our plan can check the rightness of each encoded question result or further precisely discover what number of or which qualified information records are returned by the exploitative cloud server. A short mark procedure \highlight4 is intended to ensure the\highlight2  validness of confirmation question itself. 
\par 
\par Additionally, we plan a protected confirmation question ask for system, by which \highlight4 the cloud server\highlight2  knows nothing about which check protest is asked for by the information client & really returned by the cloud server. Execution & precision tests exhibit the legitimacy & effectiveness of our proposed conspires. REFERENCES K. Ren, C. Wang, & Q. Wang, \ldblquote Security challenges for the public cloud,\rdblquote  IEEE Internet Computing, vol. 16, no. 1, pp. 69\endash 73, 2012 S. Kamara & K. 
\par 
\par Lauter, \highlight4\ldblquote Cryptographic cloud storage,\rdblquote  in\highlight2  Springer \highlight4 RLCPS, January 2010\highlight2  \highlight4 D. Song, D. Wagner,\highlight2  & A. \highlight4 Perrig, \ldblquote Practical techniques for searches on encrypted\highlight2  data,\rdblquote  in \highlight4 IEEE Symposiumon Security\highlight2  & Privacy, vol. 8, 2000, pp. 44\endash 55. E.-J.Goh, \ldblquote Secure indexes,\rdblquote  \highlight4 IACR ePrint Cryptography Archive,\highlight2  http://eprint.iacr.org/2003/216, Tech. Rep., 2003. \highlight4 D. Boneh, G. D. Crescenzo,\highlight2  R. Ostrovsky, & G. 
\par 
\par Persiano, \highlight4\ldblquote Public-key encryption with keyword search,\rdblquote  in\highlight2  EUROCRYPR, 2004, pp. 506\endash 522. R. \highlight4 Curtmola, J. Garay, S. Kamara,\highlight2  & R. Ostrovsky, \ldblquote Searchable \highlight4 symmetric encryption: improved\highlight2  deinitions & efficient constructions,\rdblquote  in ACM CCS, vol. 19, 2006, pp. 79\endash 88. M. Bellare, A. Boldyreva, & A. O\rquote Neill, \ldblquote Deterministic & efficiently searchable encryption,\rdblquote  in Springer CRYPTO, 2007. K. Kurosawa & Y. 
\par 
\par Ohtaki, \ldblquote Uc-secure searchable symmetric encryption,\rdblquote  \highlight4 Lecture Notes in Computer\highlight2  Science, vol. 7397, pp. 258\endash  274, 2012. P. Xu, H. Jin, Q. Wu, & W. \highlight4 Wang, \ldblquote Public-key encryption with fuzzy keyword search: A provably secure scheme under keyword guessing attack,\rdblquote  IEEE Transactions on Computers, vol. 62,\highlight2  \highlight4 no. 11, pp. 2266\endash 2277, 2013.\highlight2  S. Kamara & C. Papamanthou, \ldblquote Parallel & \highlight4 dynamic searchable symmetric\highlight2  encryption,\rdblquote  in Financial Cryptography & Data Security. 
\par 
\par Springer \highlight4 Berlin Heidelberg, 2013, pp.\highlight2  
\par 
\par INTERNET SOURCES:
\par -------------------------------------------------------------------------------------------
\par 0% - https://www.researchgate.net/publication
\par 0% - https://www.scribd.com/document/88694732
\par 0% - Empty
\par 0% - http://www.gsascheduler.com/schedules/gs
\par 0% - http://explainingcomputers.com/security.
\par 0% - http://www.ijcttjournal.org/2015/Volume2
\par 0% - https://link.springer.com/chapter/10.100
\par 0% - http://ijarse.com/images/fullpdf/1509627
\par 0% - http://ijarcet.org/wp-content/uploads/IJ
\par 0% - http://www.warse.org/IJETER/static/pdf/I
\par 0% - https://www.ukessays.com/essays/engineer
\par 0% - https://www.ibm.com/developerworks/ratio
\par 0% - https://en.wikibooks.org/wiki/Rhetoric_a
\par 0% - https://www.studystack.com/flashcard-734
\par 0% - https://en.wikipedia.org/wiki/Metrology
\par 0% - https://www.red-gate.com/simple-talk/sql
\par 0% - http://www.encyclopedia.com/social-scien
\par 0% - https://www.wikihow.com/Use-the-Scientif
\par 0% - http://ufdc.ufl.edu/UF00027795/02334
\par 0% - https://www.cdw.com/shop/products/Micros
\par 0% - https://www.nasa.gov/sites/default/files
\par 0% - https://promo.bankofamerica.com/mortgage
\par 0% - http://profullcrack.com/audacity-free-do
\par 0% - https://www.houzz.com/discussions/269569
\par 0% - https://en.wikipedia.org/wiki/Wikipedia_
\par 0% - https://www.washingtonpost.com/news/the-
\par 0% - http://www.explainthatstuff.com/cloud-co
\par 0% - http://www.journals.uchicago.edu/doi/ful
\par 0% - http://www.acq.osd.mil/osbp/sbir/solicit
\par 0% - http://www.bu.edu/av/celop2/vocabulary_l
\par 0% - http://hss-us.com/hss-us/
\par 0% - http://ijarse.com/images/fullpdf/1509627
\par 0% - https://issuu.com/ijre/docs/ijre_6_shari
\par 0% - https://issuu.com/a1arquitetura/docs/arc
\par 0% - http://www.infosectoday.com/Articles/AU7
\par 0% - http://dl.acm.org/citation.cfm?id=884426
\par 0% - https://quizlet.com/18209825/combo-with-
\par 0% - http://www.iosrjournals.org/iosr-jce/pap
\par 1% - http://www.ijptonline.com/wp-content/upl
\par 0% - https://www.visualstudiogallery.msdn.mic
\par 1% - http://www.ijptonline.com/wp-content/upl
\par 0% - https://aceproject.org/ace-en/topics/es/
\par 0% - https://link.springer.com/chapter/10.100
\par 1% - http://www.ijptonline.com/wp-content/upl
\par 0% - https://issuu.com/editorijaerd/docs/data
\par 0% - https://deadspin.com/the-mmqb-allows-ano
\par 0% - https://issuu.com/editorijaerd/docs/data
\par 0% - https://www.irjet.net/archives/V4/i5/IRJ
\par 0% - http://www.academia.edu/1945242/Public_k
\par 0% - http://orbilu.uni.lu/handle/10993/80/bro
\par 0% - https://www.microsoft.com/en-us/research
\par 0% - http://www.globalissues.org/issue/65/geo
\par 0% - http://www.123helpme.com/search.asp?text
\par 0% - http://commdocs.house.gov/committees/jud
\par 0% - https://link.springer.com/content/pdf/10
\par 0% - https://technet.microsoft.com/en-us/libr
\par 0% - https://nepis.epa.gov/Exe/ZyPURL.cgi?Doc
\par 0% - https://en.glosbe.com/en/en/without%20a%
\par 0% - https://scribd.com/document/96992433/Soc
\par 0% - http://archiveofourown.org/works/1821292
\par 0% - https://www.websitehosting.com/guide
\par 0% - http://lcweb2.loc.gov/gc/lhbtn/03997/039
\par 0% - http://dl.acm.org/citation.cfm?id=284320
\par 0% - https://www.gog.com/forum/primordia/chro
\par 0% - https://issuu.com/raquito/docs/dec09
\par 0% - http://you-books.com/book/L-Davis/Master
\par 0% - http://www.shayarihishayari.com/p/the-ad
\par 0% - https://www.irjet.net/archives/V4/i5/IRJ
\par 0% - http://antechseo.blogspot.com/2017/09/ap
\par 0% - https://en.wikipedia.org/wiki/Classical_
\par 0% - https://buy.garmin.com/en-US/US/p/89564
\par 0% - https://www.scribd.com/document/31776618
\par 0% - https://www.phil.frb.org/-/media/publica
\par 0% - http://www.ijptonline.com/wp-content/upl
\par 0% - https://link.springer.com/chapter/10.100
\par 0% - http://whatarecloudservices.com/
\par 0% - http://www.ijptonline.com/wp-content/upl
\par 0% - https://www.cs.rutgers.edu/~pxk/419/exam
\par 0% - https://ib-aid.com/ru/articles/database-
\par 0% - http://www.ieee-security.org/TC/SP2014/p
\par 0% - https://eprint.iacr.org/2014/219.pdf
\par 0% - https://ar.scribd.com/document/340896586
\par 0% - http://www.cloud.com/
\par 0% - http://ijcert.org/ems/ijcert_papers/V3I2
\par 0% - http://www.enggjournals.com/ijet/docs/IJ
\par 0% - http://www.business2community.com/tech-g
\par 0% - http://www.science.gov/topicpages/e/extr
\par 0% - https://nepis.epa.gov/Exe/ZyPURL.cgi?Doc
\par 0% - http://www.baylor.edu/content/services/d
\par 0% - https://www.coursepaper.com/psyc-456/
\par 0% - https://www.cigna.com/assets/docs/about-
\par 0% - http://www.ijcttjournal.org/2015/Volume2
\par 0% - https://www.techpowerup.com/news-archive
\par 0% - https://issuu.com/landsurveyor/docs/clou
\par 0% - https://www.ukessays.com/essays/computer
\par 0% - https://www.scribd.com/doc/46749357/The-
\par 0% - http://www2.gsu.edu/~phltso/sample-paper
\par 0% - https://www.theguardian.com/small-busine
\par 0% - https://www.fideliscare.org/en-us/produc
\par 0% - https://ijcert.org/Current_Issues.php?ye
\par 0% - https://seekingalpha.com/filing/3012838
\par 0% - https://msdn.microsoft.com/en-us/library
\par 0% - https://www.ijirset.com/upload/2017/iccs
\par 0% - http://ijates.com/images/short_pdf/14742
\par 0% - https://www.irjet.net/archives/V3/i4/IRJ
\par 0% - http://srcpublications.com/admin/uploads
\par 0% - https://en.wikipedia.org/wiki/Wikipedia:
\par 0% - http://www.ijrter.com/papers/volume-3/is
\par 0% - https://plato.stanford.edu/entries/respe
\par 0% - https://ntl.bts.gov/lib/jpodocs/repts_te
\par 0% - http://www.ijrcct.org/index.php/ojs/arti
\par 0% - https://issuu.com/esatjournals/docs/comp
\par 0% - https://www.bible.com/bible/107/1JN.2.15
\par 0% - https://quizlet.com/31247700/bstrandable
\par 0% - https://en.wikipedia.org/wiki/Distribute
\par 0% - http://security.blogoverflow.com/2012/08
\par 0% - https://stackoverflow.com/questions/4803
\par 0% - https://plato.stanford.edu/entries/daois
\par 0% - https://www.scribd.com/doc/49093669/Case
\par 0% - https://www.scribd.com/doc/215059924/Que
\par 0% - http://www.aral.com.au/resources/arthesi
\par 0% - https://138001750.r.bat.bing.com/?ld=d3M
\par 0% - http://www.inderscience.com/info/ingener
\par 0% - https://es.scribd.com/doc/94098655/Blood
\par 0% - https://www.scribd.com/document/22836868
\par 0% - https://www.linkedin.com/in/clelio
\par 0% - https://www.tutorialspoint.com/uml/uml_m
\par 0% - http://www.bing.com/videos/search?q=obje
\par 0% - https://en.wikipedia.org/wiki/Class_diag
\par 0% - https://www.coursehero.com/file/p6g31p6/
\par 0% - http://www.conceptdraw.com/examples/acti
\par 0% - https://thesystemsthinker.com/from-causa
\par 0% - https://www.scribd.com/document/36394695
\par 0% - http://www.sciencedirect.com/science/art
\par 0% - https://www.scribd.com/document/29436440
\par 0% - http://www.kresttechnology.com/krest-aca
\par 0% - https://www.siteground.com/tutorials/clo
\par 0% - http://www.computerweekly.com/feature/Ca
\par 0% - https://en.wikipedia.org/wiki/Java_(soft
\par 0% - https://www.scribd.com/document/16754268
\par 0% - https://lifehacker.com/how-to-find-out-i
\par 0% - https://www.codeproject.com/Articles/325
\par 0% - http://study.com/articles/Become_a_Java_
\par 0% - https://www.scribd.com/document/27640932
\par 0% - http://www.sentex.net/~pkomisar/J1/1_J2_
\par 0% - https://issuu.com/nazsul/docs/tcp_report
\par 0% - http://www.rogerebert.com/scanners/the-c
\par 0% - http://bemahasiqape.ml/d44d4-apt-finder-
\par 0% - https://www.law.cornell.edu/uscode/text/
\par 0% - https://www.scribd.com/document/38871899
\par 0% - https://stackoverflow.com/questions/6855
\par 0% - https://www.scribd.com/document/27018497
\par 0% - https://www.scribd.com/document/15430725
\par 0% - https://issuu.com/readymadeacademicproje
\par 0% - http://www.open.ac.uk/StudentWeb/m874/!s
\par 0% - http://www.hivmr.com/db/pa1jzcfkp3mazj31
\par 0% - https://www.scribd.com/document/18976770
\par 0% - http://www.hivmr.com/db/3kkpcfk7m8311xsc
\par 0% - https://stackoverflow.com/questions/1915
\par 0% - http://www.c-sharpcorner.com/forums/how-
\par 0% - http://www.hivmr.com/db/x9za1pkk3ksmxkd3
\par 0% - http://www.marinilli.com/books/b1/PJUI.t
\par 0% - http://www.hivmr.com/db/axz9s9psdf87cfkj
\par 0% - http://www.hivmr.com/db/9dxjjcpcmfkkcdpa
\par 0% - https://www.scribd.com/document/28605938
\par 0% - https://github.com/diogoduailibe/lzstrin
\par 0% - http://www.hivmr.com/db/13akjcxpmpxjf9m3
\par 0% - http://www.cs.trinity.edu/~mlewis/SwiftV
\par 0% - https://www.studyblue.com/notes/note/n/j
\par 0% - https://stackoverflow.com/questions/1215
\par 0% - https://stackoverflow.com/questions/1609
\par 0% - http://hg.openjdk.java.net/jdk8/jdk8/jdk
\par 0% - https://www.scribd.com/document/20676624
\par 0% - https://github.com/diogoduailibe/lzstrin
\par 0% - https://www.scribd.com/document/32534328
\par 0% - https://www.scribd.com/document/7221401/
\par 0% - https://www.scribd.com/document/6795937/
\par 0% - https://stackoverflow.com/questions/3221
\par 0% - http://grokbase.com/t/dojo/dojo-interest
\par 0% - http://www.hivmr.com/db/1mf8fzc3mffx8d7j
\par 0% - http://www.hivmr.com/db/k879ppama13m3fzd
\par 0% - http://www.hivmr.com/db/1f119dxm19zxmmk7
\par 0% - https://pastebin.com/jGU3QENv
\par 0% - https://www.cis.upenn.edu/~matuszek/Gene
\par 0% - https://gist.github.com/kharmabum/72578a
\par 0% - https://www.coursehero.com/file/24660402
\par 0% - https://www.red-gate.com/simple-talk/sql
\par 0% - http://sharepointmaven.com/2-ways-to-sea
\par 0% - https://answers.microsoft.com/en-us/wind
\par 0% - http://csis.pace.edu/ctappert/it691-09fa
\par 0% - https://www.schneier.com/blog/archives/2
\par 0% - http://www.annuities.pacificlife.com/vax
\par 0% - http://imar.spaanjaars.com/414/storing-u
\par 0% - https://howtodoinjava.com/core-java/basi
\par 0% - https://blogs.technet.microsoft.com/heys
\par 0% - https://en.wikipedia.org/wiki/Domain_Nam
\par 0% - http://www.ijsrd.com/articles/IJSRDV3I10
\par 0% - https://www.sciencedirect.com/science/ar
\par 0% - https://www.hindawi.com/journals/tswj/20
\par 0% - https://issuu.com/editorijaerd/docs/data
\par 0% - http://www.utdallas.edu/~muratk/courses/
\par 0% - http://cryptography.wikia.com/wiki/Deter
\par 0% - https://www.scribd.com/document/35152092
\par 0% - https://www.hindawi.com/journals/scn/201
\par 0% - http://ijmca.org/index.php/ojs/article/v
\par 0% - https://en.wikipedia.org/wiki/Springer_B
\par \f1 
\par }

